#pragma checksum "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b1060a41544a432106a259bbe54144a02b7c7b04"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Entry_SS), @"mvc.1.0.view", @"/Views/Home/Entry_SS.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Entry_SS.cshtml", typeof(AspNetCore.Views_Home_Entry_SS))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\_ViewImports.cshtml"
using ExpenseProcessingSystem;

#line default
#line hidden
#line 5 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
using ExpenseProcessingSystem.ViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b1060a41544a432106a259bbe54144a02b7c7b04", @"/Views/Home/Entry_SS.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1c1f162b82d147410b496f61669a4098f632dccc", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Entry_SS : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EntryCVViewModelList>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/EntryScripts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
  
    ViewData["Title"] = "Entry_SS";

#line default
#line hidden
            BeginContext(44, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(145, 162, true);
            WriteLiteral("\r\n<div class=\"tabContent\">\r\n    <div id=\"tbl-lbl\">\r\n        <div class=\"dis-inline-block\"><p>Date:</p></div>\r\n        <div class=\"dis-inline-block\">\r\n            ");
            EndContext();
            BeginContext(308, 94, false);
#line 13 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
       Write(Html.TextBoxFor(model => model.expenseDate, new { @readonly = "true", @class = "input w-97" }));

#line default
#line hidden
            EndContext();
            BeginContext(402, 1439, true);
            WriteLiteral(@"
        </div>
    </div>
    <div class=""flex-c"">
        <table class=""table table-bordered table-striped voucher-tbl w-97"" id=""inputTable"">
            <colgroup>
                <col style=""width:20%;"" />
                <col style=""width:15%;"" />
                <col style=""width:10%"" />
                <col style=""width:2%;"" />
                <col style=""width:5%;"" />
                <col style=""width:2%;"" />
                <col style=""width:5%;"" />
                <col style=""width:7%;"" />
                <col style=""width:10%;"" />
                <col style=""width:10%;"" />
                <col style=""width:10%;"" />
                <col style=""width:2%;"" />
            </colgroup>
            <thead>
                <tr>
                    <th rowspan=""2"">Gbase Remarks</th>
                    <th rowspan=""2"">Account</th>
                    <th rowspan=""2"">Department</th>
                    <th colspan=""2"" rowspan=""2"">VAT</th>
                    <th colspan=""2"" rowspan=""");
            WriteLiteral(@"2"">EWT</th>
                    <th rowspan=""2"">Currency</th>
                    <th>Debit</th>
                    <th colspan=""2"">Credit</th>
                </tr>
                <tr>
                    <th scope=""col"">Gross Amount</th>
                    <th scope=""col"">EWT Amount</th>
                    <th scope=""col"">Cash</th>
                </tr>
            </thead>
            <tbody>
");
            EndContext();
#line 50 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                 for (int i = 0; i < Model.EntryCV.Count; i++)
                {

#line default
#line hidden
            BeginContext(1924, 23, true);
            WriteLiteral("                    <tr");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 1947, "\"", 1959, 2);
            WriteAttributeValue("", 1952, "item_", 1952, 5, true);
#line 52 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
WriteAttributeValue("", 1957, i, 1957, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1960, 136, true);
            WriteLiteral(">\r\n                        <td class=\"p-b-1 p-t-1\">\r\n                            <div class=\"flex-sb\">\r\n                                ");
            EndContext();
            BeginContext(2097, 85, false);
#line 55 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                           Write(Html.TextBoxFor(x => Model.EntryCV[i].GBaseRemarks, new { @class = "input100 w-80" }));

#line default
#line hidden
            EndContext();
            BeginContext(2182, 38, true);
            WriteLiteral("\r\n                                <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2220, "\"", 2234, 2);
            WriteAttributeValue("", 2225, "remark_", 2225, 7, true);
#line 56 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
WriteAttributeValue("", 2232, i, 2232, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2235, 118, true);
            WriteLiteral(">\r\n                                    <a href=\"#\" class=\"gRemarks glyphicon glyphicon-folder-open fs-23 m-r-5\"></a>\r\n");
            EndContext();
#line 58 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                     for (int y = 0; y < Model.EntryCV[i].gBaseRemarksDetails.Count(); y++)
                                    {
                                        

#line default
#line hidden
            BeginContext(2542, 68, false);
#line 60 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.HiddenFor(x => Model.EntryCV[i].gBaseRemarksDetails[y].docType));

#line default
#line hidden
            EndContext();
#line 60 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                                             ;
                                        

#line default
#line hidden
            BeginContext(2654, 65, false);
#line 61 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.HiddenFor(x => Model.EntryCV[i].gBaseRemarksDetails[y].desc));

#line default
#line hidden
            EndContext();
#line 61 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                                          ;
                                        

#line default
#line hidden
            BeginContext(2763, 66, false);
#line 62 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.HiddenFor(x => Model.EntryCV[i].gBaseRemarksDetails[y].invNo));

#line default
#line hidden
            EndContext();
#line 62 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                                           ;
                                        

#line default
#line hidden
            BeginContext(2873, 67, false);
#line 63 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.HiddenFor(x => Model.EntryCV[i].gBaseRemarksDetails[y].amount));

#line default
#line hidden
            EndContext();
#line 63 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                                            ;
                                    }

#line default
#line hidden
            BeginContext(2982, 172, true);
            WriteLiteral("                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <select");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 3154, "\"", 3201, 1);
#line 69 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
WriteAttributeValue("", 3159, Html.IdFor(x => Model.EntryCV[i].account), 3159, 42, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3202, 24, true);
            WriteLiteral(" class=\"input100 txtAcc\"");
            EndContext();
            BeginWriteAttribute("name", " name=\"", 3226, "\"", 3277, 1);
#line 69 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
WriteAttributeValue("", 3233, Html.NameFor(x => Model.EntryCV[i].account), 3233, 44, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3278, 3, true);
            WriteLiteral(">\r\n");
            EndContext();
#line 70 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                 foreach (var groepModel in Model.systemValues.acc)
                                {

#line default
#line hidden
            BeginContext(3401, 36, true);
            WriteLiteral("                                    ");
            EndContext();
            BeginContext(3437, 90, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b74fc38a687f462099f40337199ff414", async() => {
                BeginContext(3500, 18, false);
#line 72 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                             Write(groepModel.accName);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 72 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                       WriteLiteral(groepModel.accId);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "class", 1, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#line 72 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
AddHtmlAttributeValue("", 3478, groepModel.accCode, 3478, 19, false);

#line default
#line hidden
            EndAddHtmlAttributeValues(__tagHelperExecutionContext);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3527, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 73 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                }

#line default
#line hidden
            BeginContext(3564, 128, true);
            WriteLiteral("                            </select>\r\n                        </td>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(3693, 174, false);
#line 77 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.DropDownListFor(x => Model.EntryCV[i].dept, new SelectList(Model.systemValues.dept, "Value", "Text", Model.systemValues.dept.SelectedValue), new { @class = "input100" }));

#line default
#line hidden
            EndContext();
            BeginContext(3867, 87, true);
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"text-align:center\">");
            EndContext();
            BeginContext(3955, 73, false);
#line 79 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                 Write(Html.CheckBoxFor(x => Model.EntryCV[i].chkVat, new { @class = "chkVat" }));

#line default
#line hidden
            EndContext();
            BeginContext(4028, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(4064, 98, false);
#line 80 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.TextBoxFor(x => Model.EntryCV[i].vat, new { @class = "input100 txtVat", @readonly = "true" }));

#line default
#line hidden
            EndContext();
            BeginContext(4162, 61, true);
            WriteLiteral("</td>\r\n                        <td style=\"text-align:center\">");
            EndContext();
            BeginContext(4224, 73, false);
#line 81 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                 Write(Html.CheckBoxFor(x => Model.EntryCV[i].chkEwt, new { @class = "chkEwt" }));

#line default
#line hidden
            EndContext();
            BeginContext(4297, 65, true);
            WriteLiteral("</td>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(4363, 198, false);
#line 83 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.DropDownListFor(x => Model.EntryCV[i].ewt, new SelectList(Model.systemValues.ewt, "Value", "Text", Model.systemValues.ewt.SelectedValue), new { @class = "input100 txtEwt", @disabled = "true" }));

#line default
#line hidden
            EndContext();
            BeginContext(4561, 91, true);
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(4653, 181, false);
#line 86 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.DropDownListFor(x => Model.EntryCV[i].ccy, new SelectList(Model.systemValues.currency, "Value", "Text", Model.systemValues.currency.SelectedValue), new { @class = "input100" }));

#line default
#line hidden
            EndContext();
            BeginContext(4834, 61, true);
            WriteLiteral("\r\n                        </td>\r\n                        <td>");
            EndContext();
            BeginContext(4896, 117, false);
#line 88 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.TextBoxFor(x => Model.EntryCV[i].debitGross, new { @class = "input100 txtGross", @type = "number", @min = "0" }));

#line default
#line hidden
            EndContext();
            BeginContext(5013, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(5049, 110, false);
#line 89 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.TextBoxFor(x => Model.EntryCV[i].credEwt, new { @class = "input100 txtCredEwt", @readonly = "readonly" }));

#line default
#line hidden
            EndContext();
            BeginContext(5159, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(5195, 112, false);
#line 90 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.TextBoxFor(x => Model.EntryCV[i].credCash, new { @class = "input100 txtCredCash", @readonly = "readonly" }));

#line default
#line hidden
            EndContext();
            BeginContext(5307, 34, true);
            WriteLiteral("</td>\r\n                        <td");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 5341, "\"", 5352, 2);
            WriteAttributeValue("", 5346, "req_", 5346, 4, true);
#line 91 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
WriteAttributeValue("", 5350, i, 5350, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5353, 112, true);
            WriteLiteral(">\r\n                            <a class=\"reqBtn glyphicon glyphicon-list-alt\"></a>\r\n                            ");
            EndContext();
            BeginContext(5466, 76, false);
#line 93 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.HiddenFor(x => Model.EntryCV[i].month, new { @class = "txtAmorMonth" }));

#line default
#line hidden
            EndContext();
            BeginContext(5542, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(5573, 72, false);
#line 94 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.HiddenFor(x => Model.EntryCV[i].day, new { @class = "txtAmorDay" }));

#line default
#line hidden
            EndContext();
            BeginContext(5645, 30, true);
            WriteLiteral("\r\n                            ");
            EndContext();
            BeginContext(5676, 82, false);
#line 95 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                       Write(Html.HiddenFor(x => Model.EntryCV[i].duration, new { @class = "txtAmorDuration" }));

#line default
#line hidden
            EndContext();
            BeginContext(5758, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 96 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                             for (int y = 0; y < Model.EntryCV[i].amtDetails.Count(); y++)
                            {
                                

#line default
#line hidden
            BeginContext(5916, 59, false);
#line 98 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                           Write(Html.HiddenFor(x => Model.EntryCV[i].amtDetails[y].amtDate));

#line default
#line hidden
            EndContext();
#line 98 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                            ;
                                

#line default
#line hidden
            BeginContext(6011, 61, false);
#line 99 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                           Write(Html.HiddenFor(x => Model.EntryCV[i].amtDetails[y].amtAmount));

#line default
#line hidden
            EndContext();
#line 99 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                                                                              ;
                            }

#line default
#line hidden
            BeginContext(6106, 58, true);
            WriteLiteral("                        </td>\r\n                    </tr>\r\n");
            EndContext();
#line 103 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                }

#line default
#line hidden
            BeginContext(6183, 1164, true);
            WriteLiteral(@"
                <tr>
                    <td style=""border:none; background-color:#f2f2f2"" rowspan=""2""><a id=""addRow"" href=""#"" class=""glyphicon glyphicon-plus""></a></td>
                    <td colspan=""7"" style=""text-align:right; border:none; background-color:#f2f2f2"">Subtotal : </td>
                    <td rowspan=""2""><div class=""flex-c""><input type=""text"" class=""input100"" readonly id=""grossTotal"" /></div></td>
                    <td><input type=""text"" readonly class=""input100"" id=""credEwtTotal"" /></td>
                    <td><input type=""text"" readonly class=""input100"" id=""credCashTotal"" /></td>
                </tr>
                <tr>
                    <td colspan=""7"" style=""text-align:right; border:none; background-color:#f2f2f2 "">Total : </td>
                    <td colspan=""2""><div class=""flex-c""><input type=""text"" class=""input100"" readonly id=""credTotal"" /></div></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id=""voucherPreview"" class=""bord");
            WriteLiteral("er-solid\">\r\n        <div id=\"tbl-lbl\">\r\n            <div class=\"dis-inline-block\"><p>Preview of Voucher:</p></div>\r\n        </div>\r\n        ");
            EndContext();
            BeginContext(7348, 25, false);
#line 123 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
   Write(Html.Partial("CVPartial"));

#line default
#line hidden
            EndContext();
            BeginContext(7373, 172, true);
            WriteLiteral("\r\n    </div>\r\n    <div id=\"entry-status\" class=\"m-t-10 m-b-10\">\r\n        <div class=\"dis-inline-block\"><label>Status: </label></div>\r\n        <div class=\"dis-inline-block\">");
            EndContext();
            BeginContext(7546, 76, false);
#line 127 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                 Write(Html.TextBoxFor(x => x.status, new { @readonly = "true", @class = "input" }));

#line default
#line hidden
            EndContext();
            BeginContext(7622, 116, true);
            WriteLiteral("</div>\r\n        <div class=\"dis-inline-block\"><label>Approver:</label></div>\r\n        <div class=\"dis-inline-block\">");
            EndContext();
            BeginContext(7739, 86, false);
#line 129 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                 Write(Html.TextBoxFor(model => model.approver, new { @readonly = "true", @class = "input" }));

#line default
#line hidden
            EndContext();
            BeginContext(7825, 158, true);
            WriteLiteral("</div>\r\n        <div class=\"dis-inline-block\"><label>Verifier:</label></div>\r\n        <div class=\"dis-inline-block\">\r\n            <p class=\"dis-inline-block\">");
            EndContext();
            BeginContext(7984, 94, false);
#line 132 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.TextBoxFor(model => model.verifier_1, new { @readonly = "true", @class = "m-l-5 input" }));

#line default
#line hidden
            EndContext();
            BeginContext(8078, 46, true);
            WriteLiteral("</p>\r\n            <p class=\"dis-inline-block\">");
            EndContext();
            BeginContext(8125, 94, false);
#line 133 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                                   Write(Html.TextBoxFor(model => model.verifier_2, new { @readonly = "true", @class = "m-l-5 input" }));

#line default
#line hidden
            EndContext();
            BeginContext(8219, 1371, true);
            WriteLiteral(@"</p>
        </div>
    </div>
    <div id=""entry-controls"" class=""m-b-10"">
        <div class=""flex-sb"">
            <div>
                <div class=""dis-inline-block tbl-btn""><button>Save</button></div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Delete</button></div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Modify</button></div>
            </div>
            <div>
                <div class=""dis-inline-block tbl-btn""><button id=""reversal_entry"" disabled>Create Reversal Entry</button></div>
            </div>
            <div>
                <div class=""dis-inline-block tbl-btn m-l-41""><button disabled>Print Check</button></div>
            </div>

        </div>
        <div class=""flex-sb"">
            <div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Approve/Verify</button></div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Reject</button></div>
            </div>
      ");
            WriteLiteral(@"      <div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Delete GBase Post</button></div>
            </div>
            <div>
                <div class=""dis-inline-block tbl-btn""><button disabled>Print BIR Certificate</button></div>
            </div>
        </div>
    </div>
    <div id=""modalDiv"">
        ");
            EndContext();
            BeginContext(9591, 28, false);
#line 165 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
   Write(Html.Partial("ModalPartial"));

#line default
#line hidden
            EndContext();
            BeginContext(9619, 1253, true);
            WriteLiteral(@"
    </div>

</div>
<script>
    $(function () {
        $(window).on(""load"", function () {
            var gross = $("".txtGross"");
            var credEwt = $("".txtCredEwt"");
            var credCash = $("".txtCredCash"");

            var grossTotal = 0;
            var ewtSubTotal = 0;
            var cashSubTotal = 0;

            for (var i = 0; i < gross.length; i++) {
                grossTotal += Number(gross[i].value);
            }

            for (var i = 0; i < credEwt.length; i++) {
                ewtSubTotal += Number(credEwt[i].value);
            }

            for (var i = 0; i < credCash.length; i++) {
                cashSubTotal += Number(credCash[i].value);
            }

            $(""#grossTotal"").val(grossTotal);
            $(""#credEwtTotal"").val(ewtSubTotal);
            $(""#credCashTotal"").val(cashSubTotal);
            $(""#credTotal"").val(Number(ewtSubTotal + cashSubTotal));
        });

        $(""#addRow"").click(function (e) {
            var it");
            WriteLiteral("emCount = document.getElementById(\'inputTable\').getElementsByTagName(\'tbody\')[0].childElementCount - 2;\r\n            var tableRef = document.getElementById(\'inputTable\').getElementsByTagName(\'tbody\')[0];\r\n\r\n            var acc = ");
            EndContext();
            BeginContext(10873, 48, false);
#line 202 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.systemValues.acc)));

#line default
#line hidden
            EndContext();
            BeginContext(10921, 26, true);
            WriteLiteral(";\r\n            var dept = ");
            EndContext();
            BeginContext(10948, 49, false);
#line 203 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                  Write(Html.Raw(Json.Serialize(Model.systemValues.dept)));

#line default
#line hidden
            EndContext();
            BeginContext(10997, 26, true);
            WriteLiteral(";\r\n            var curr = ");
            EndContext();
            BeginContext(11024, 53, false);
#line 204 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                  Write(Html.Raw(Json.Serialize(Model.systemValues.currency)));

#line default
#line hidden
            EndContext();
            BeginContext(11077, 25, true);
            WriteLiteral(";\r\n            var ewt = ");
            EndContext();
            BeginContext(11103, 48, false);
#line 205 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.systemValues.ewt)));

#line default
#line hidden
            EndContext();
            BeginContext(11151, 5499, true);
            WriteLiteral(@";

            // Insert a row in the table at the last row
            var newRow = tableRef.insertRow(itemCount);
            newRow.id = ""item_"" + itemCount

            var htmlContent = '<td class=""p-b-1 p-t-1""><div class=""flex-sb"">' +
                '<input class=""input100 w-80"" id=""EntryCV_' + itemCount + '__GBaseRemarks"" name=""EntryCV[' + itemCount + '].GBaseRemarks"" type=""text"" value="""">' +
                '<div id=""remark_' + itemCount + '""><a href=""#"" class=""gRemarks glyphicon glyphicon-folder-open fs-23 m-r-5""></a></div></div></td>' +
                '<td><select class=""input100 txtAcc"" id=""EntryCV_' + itemCount + '__account"" name=""EntryCV[' + itemCount + '].account"">';

            for (var i = 0; i < acc.length; i++) {
                htmlContent += '<option value=""' + acc[i][""accId""] + '"" class=""' + acc[i][""accCode""] + '"">' + acc[i][""accName""] + '</option>';
            }

            htmlContent += '</select></td>' +
                '<td><select class=""input100"" id=""EntryCV_' ");
            WriteLiteral(@"+ itemCount + '__dept"" name=""EntryCV[' + itemCount + '].dept"">';
            for (var i = 0; i < dept.length; i++) {
                htmlContent += '<option value=""' + dept[i][""value""] + '"">' + dept[i][""text""] + '</option>';
            }

            htmlContent += '</select></td>' +
                '<td style=""text-align:center""><input class=""chkVat"" data-val=""true"" data-val-required=""The chkVat field is required."" id=""EntryCV_' + itemCount + '__chkVat"" name=""EntryCV[' + itemCount + '].chkVat"" type=""checkbox"" value=""true""></td>' +
                '<td><input class=""input100 txtVat"" data-val=""true"" data-val-number=""The field vat must be a number."" data-val-required=""The vat field is required."" id=""EntryCV_' + itemCount + '__vat"" name=""EntryCV[' + itemCount + '].vat"" readonly=""true"" type=""text"" value=""0""></td>' +
                '<td style=""text-align:center""><input class=""chkEwt"" data-val=""true"" data-val-required=""The chkEwt field is required."" id=""EntryCV_' + itemCount + '__chkEwt"" name=""EntryCV[' +");
            WriteLiteral(@" itemCount + '].chkEwt"" type=""checkbox"" value=""true""></td>' +
                '<td><select class=""input100 txtEwt"" data-val=""true"" data-val-required=""The ewt field is required."" id=""EntryCV_' + itemCount + '__ewt"" name=""EntryCV[' + itemCount + '].ewt"" disabled=""disabled"">';
            for (var i = 0; i < ewt.length; i++) {
                htmlContent += '<option value=""' + ewt[i][""value""] + '"">' + ewt[i][""text""] + '</option>';
            }
            htmlContent += '</select></td>' +
                '<td><select class=""input100"" data-val=""true"" data-val-required=""The ccy field is required."" id=""EntryCV_' + itemCount + '__ccy"" name=""EntryCV[' + itemCount + '].ccy"">';
            for (var i = 0; i < curr.length; i++) {
                htmlContent += '<option value=""' + curr[i][""value""] + '"">' + curr[i][""text""] + '</option>';
            }
            htmlContent += '</select></td>' +
                '<td><input class=""input100 txtGross"" data-val=""true"" data-val-number=""The field debitGross must be");
            WriteLiteral(@" a number."" data-val-required=""The debitGross field is required."" id=""EntryCV_' + itemCount + '__debitGross"" name=""EntryCV[' + itemCount + '].debitGross"" type=""number"" min=""0"" value=""0""></td>' +
                '<td><input class=""input100  txtCredEwt"" data-val=""true"" data-val-number=""The field credEwt must be a number."" data-val-required=""The credEwt field is required."" id=""EntryCV_' + itemCount + '__credEwt"" name=""EntryCV[' + itemCount + '].credEwt"" type=""text"" readonly=""true"" value=""0""></td>' +
                '<td><input class=""input100 txtCredCash"" data-val=""true"" data-val-number=""The field credCash must be a number."" data-val-required=""The credCash field is required."" id=""EntryCV_' + itemCount + '__credCash"" name=""EntryCV[' + itemCount + '].credCash"" type=""text"" readonly=""true"" value=""0""></td>' +
                '<td id=""req_' + itemCount + '""><a class=""reqBtn glyphicon glyphicon-list-alt""></a></td>';

            newRow.innerHTML = htmlContent;
        });

        //ExpenseAmortization
       ");
            WriteLiteral(@" $(""table"").on(""click"", "".expenseAmortization"", function (e) {
            e.stopImmediatePropagation();

            var pNode = $(this.parentNode)[0].parentNode;

            var id = pNode.id;
            var month;
            var day;
            var duration;

            if ($(""#"" + id).find("".txtAmorMonth"").val() != null) {
                month = $(""#"" + id).find("".txtAmorMonth"").val();
            } else {
                month = 1;
            }
            if ($(""#"" + id).find("".txtAmorDay"").val() != null) {
                day = $(""#"" + id).find("".txtAmorDay"").val();
            } else {
                day = 1;
            }
            if ($(""#"" + id).find("".txtAmorDuration"").val() != null) {
                duration = $(""#"" + id).find("".txtAmorDuration"").val();
            } else {
                duration = 1;
            }

            var modalDivBody = $('.modal-body');
            var modalDivFooter = $('.modal-footer').find(""#add_row_btn"").remove();;

       ");
            WriteLiteral(@"     if ($('.modal-header').find("".modal-title"")[0] == null) {
                $('.modal-header').append('<h4 class=""modal-title"">Prepaid Expense Amortization Schedule</h4>');
            }

            var vendor = $(""#vendorName option:selected"").text();
            var account = $(""#"" + pNode.id).find("".txtAcc option:selected"").text()

            modalDivBody.load(""");
            EndContext();
            BeginContext(16651, 47, false);
#line 285 "C:\Work\Mizuho EPS\eps_source\ExpenseProcessingSystem\ExpenseProcessingSystem\Views\Home\Entry_SS.cshtml"
                          Write(Url.Action("EntryExpenseAmortization", "Modal"));

#line default
#line hidden
            EndContext();
            BeginContext(16698, 2714, true);
            WriteLiteral(@""", {
                ""id"": id,
                ""vendor"": vendor,
                ""account"": account,
                ""month"": month,
                ""day"": day,
                ""duration"": duration
            }, function (response, status, xhr) {
                if (status == ""error"") {
                    alert(""Something went wrong."");
                } else {
                    if ($(""#parentIdAmortization"") != null) {
                        var tableRef = document.getElementById('modalTable').getElementsByTagName('tbody')[0];
                        //var tableRef = $(""#modalTable"").children(""tbody"");
                        var grossAmount = Number($(""#"" + id).find("".txtGross"").val());

                        tblBuilder(tableRef, month, day, duration, grossAmount);
                    }
                }
            });

            $('#myModal').modal('show');
        });

        $(""table"").on(""change"", "".txtAcc"", function (e) {

            var pNode = String($(this.paren");
            WriteLiteral(@"tNode)[0].parentNode.id);
            var accCode = $(this).find(""option:selected"").attr(""class"");
            var btnAttr = $(""#"" + pNode).find(""#req_"" + pNode.substring(5)).find("".reqBtn"");

            if (accCode == ""13265"" || accCode == ""13281"") {
                btnAttr.attr(""href"", ""#"");
                btnAttr.attr(""class"", ""expenseAmortization reqBtn glyphicon glyphicon-list-alt"");
            } else {
                btnAttr.removeAttr(""href"");
                btnAttr.attr(""class"",""reqBtn glyphicon glyphicon-list-alt"");
            }
        });
    });
</script>
<script type=""text/javascript"">
    function tblBuilder(tableRef, begMonth, day, duration, grossAmount) {
        var dvdAmount = roundNumber((grossAmount / duration), 2);

        var now = new Date();
        var Year = now.getFullYear();

        for (var i = 0; i < duration; i++) {
            var newRow = tableRef.insertRow(i);
            var cellDate = newRow.insertCell(0);
            var cellAmount = newRow.");
            WriteLiteral(@"insertCell(1);

            var month = Number(begMonth) + Number(i);

            cellDate.innerHTML = new Date(Year, month, day).toDateString();
            cellAmount.innerHTML = dvdAmount;
        }
    };

    function roundNumber(num, scale) {
        if (!("""" + num).includes(""e"")) {
            return +(Math.round(num + ""e+"" + scale) + ""e-"" + scale);
        } else {
            var arr = ("""" + num).split(""e"");
            var sig = """"
            if (+arr[1] + scale > 0) {
                sig = ""+"";
            }
            return +(Math.round(+arr[0] + ""e"" + sig + (+arr[1] + scale)) + ""e-"" + scale);
        }
    };
</script>
");
            EndContext();
            BeginContext(19412, 67, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d636924336bd46eebee123a41aff9777", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19479, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EntryCVViewModelList> Html { get; private set; }
    }
}
#pragma warning restore 1591

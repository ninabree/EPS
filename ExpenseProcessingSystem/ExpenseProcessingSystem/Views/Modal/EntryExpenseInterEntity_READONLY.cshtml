
@{
    Layout = null;
    Layout = "~/Views/Shared/_ModalLayout.cshtml";
}
@using ExpenseProcessingSystem.ViewModels.Entry
@model DDVInterEntityViewModel

@Html.HiddenFor(x => Model.Inter_ID, new { @id = "parentIdInter" })
<table class="table voucher-tbl table-bordered">
    <tr>
        <td colspan="3"><label>Exchange Rate:</label></td>
        <td colspan="2">@Html.DisplayFor(m => m.Inter_Rate, new { @class = "w-full changeable" })</td>
        <td colspan="11"></td>
    </tr>
    <tr>
        <td colspan="3"><label>@Html.DisplayFor(m => m.Inter_Currency1_ABBR) Amount</label></td>
        <td colspan="2" id="curr1-abbr">
            @Html.DisplayFor(m => m.Inter_Currency1_ABBR)
            @Html.HiddenFor(m => m.Inter_Currency1_ID)
        </td>
        <td colspan="4">@Html.DisplayFor(m => m.Inter_Currency1_Amount, new { @class = "" })</td>
        <td colspan="3">
            @Html.CheckBoxFor(model => model.Inter_Check1, new { @disabled = "disabled" })
            Convert <label id="convertCurr1">@Model.Inter_Currency2_ABBR</label>
        </td>
        <td colspan="4">
            @Html.DisplayFor(m => m.Inter_Convert1_Amount, new { @disabled = "disabled", id = "convertAmt1" })
        </td>
    </tr>
    <tr>
        <td colspan="3"><label id="curr2-lbl">@Html.DisplayFor(m => m.Inter_Currency2_ABBR, new { @disabled = "disabled" }) Amount</label></td>
        <td colspan="2" id="curr2-abbr">
            @Html.DisplayFor(m => m.Inter_Currency2_ABBR, new { @disabled = "disabled" })
        </td>
        <td colspan="4">
            @Html.DisplayFor(m => m.Inter_Convert2_Amount, new { @disabled = "disabled", id = "convertAmt2" })
        </td>
        <td colspan="3">
            @Html.CheckBoxFor(model => model.Inter_Check2, new { @disabled = "disabled" })
            Convert <label id="convertCurr2">@Model.Inter_Currency1_ABBR</label>
        </td>
        <td colspan="4">@Html.DisplayFor(m => m.Inter_Currency2_Amount, new { @class = "" })</td>
    </tr>
    <tr>
        <td colspan="16"></td>
    </tr>
    <tr>
        <td colspan="3"><label>Particular</label></td>
        <td colspan="5"><label>Account</label></td>
        <td colspan="1"><label>CCY</label></td>
        <td colspan="1"><label>Inter-Rate</label></td>
        <td colspan="2"><label>Debit</label></td>
        <td colspan="1"><label>CCY</label></td>
        <td colspan="1"><label>Inter-Rate</label></td>
        <td colspan="2"><label>Credit</label></td>
    </tr>
    @if (Model.interPartList[0].Inter_Particular1.Count > 0)
    {
        var rowCount = Model.interPartList[0].Inter_Particular1.Count;
        <tr class="part-tr" id="part1">
            <td rowspan=@rowCount colspan="3" id="part1-title"> @Html.DisplayFor(m => m.interPartList[0].InterPart_Particular_Title) </td>
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[0].Particular_Account_Name)</td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency1_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par1-0">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[0].Particular_Debit_Amount)</td>
            <td colspan="4"></td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[0].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[0].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[0].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[0].Particular_Type_ID)
        </tr>
        <tr class="part-tr" id="part1">
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[1].Particular_Account_Name)</td>
            <td colspan="4"></td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency1_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par1-1">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[1].Particular_Credit_Amount)</td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[1].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[1].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[1].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[1].Particular_Type_ID)
        </tr>
        <tr class="part-tr" id="part1">
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[2].Particular_Account_Name)</td>
            <td colspan="4"></td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency1_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par1-2">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular1[2].Particular_Credit_Amount)</td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[2].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[2].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[2].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular1[2].Particular_Type_ID)
        </tr>
        <tr></tr>
    }
    @if (Model.interPartList[0].Inter_Particular2.Count > 0)
    {
        var rowCount = Model.interPartList[0].Inter_Particular2.Count;
        <tr class="part-tr" id="part2">
            <td rowspan=@rowCount colspan="3" id="part2-title"> @Html.DisplayFor(m => m.interPartList[0].InterPart_Particular_Title) </td>
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular2[0].Particular_Account_Name)</td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency1_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par2-0">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular2[0].Particular_Debit_Amount)</td>
            <td colspan="4"></td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[0].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[0].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[0].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[0].Particular_Type_ID)
        </tr>
        <tr class="part-tr" id="part2">
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular2[1].Particular_Account_Name)</td>
            <td colspan="4"></td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency2_ABBR)</td>
            <td colspan="1" id="par2-0-1">@Html.DisplayFor(m => m.Inter_Rate)</td>
            <td colspan="2" id="par2-1">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular2[1].Particular_Credit_Amount)</td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[1].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[1].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[1].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular2[1].Particular_Type_ID)
        </tr>
        <tr></tr>
    }
    @if (Model.interPartList[0].Inter_Particular3.Count > 0)
    {
        var rowCount = Model.interPartList[0].Inter_Particular3.Count;
        <tr class="part-tr" id="part3">
            <td rowspan=@rowCount colspan="3" id="part3-title"> @Html.DisplayFor(m => m.interPartList[0].InterPart_Particular_Title) </td>
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular3[0].Particular_Account_Name)</td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency2_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par3-0">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular3[0].Particular_Debit_Amount)</td>
            <td colspan="4"></td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[0].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[0].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[0].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[0].Particular_Type_ID)
        </tr>
        <tr class="part-tr" id="part3">
            <td colspan="5">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular3[1].Particular_Account_Name)</td>
            <td colspan="4"></td>
            <td colspan="1">@Html.DisplayFor(m => m.Inter_Currency2_ABBR)</td>
            <td colspan="1"></td>
            <td colspan="2" id="par3-1">@Html.DisplayFor(m => m.interPartList[0].Inter_Particular3[1].Particular_Credit_Amount)</td>
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[1].Particular_Acc_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[1].Particular_DebCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[1].Particular_CredCurr_ID)
            @Html.HiddenFor(m => m.interPartList[0].Inter_Particular3[1].Particular_Type_ID)
        </tr>
    }
    <tr></tr>
    <tr></tr>
</table>
<script>
    $(document).ready(function () {
        //set fields
        @*var curr1Amt = @Model.Inter_Currency1_Amount;
        var curr2Amt = @Model.Inter_Currency2_Amount;

        var curr1Val = @Model.Inter_Currency1_Amount;
        var curr2Val = @Model.Inter_Currency2_Amount;
        isChk();
        var conv1Val = @Model.Inter_Convert1_Amount;
        var conv2Val = @Model.Inter_Convert2_Amount;
        if ((curr1Val != 0) && isChk2 && (conv2Val != 0)) {
            UpdateParticulars1(curr1Val, conv2Val);
        }
        else if ((curr2Val != 0) && isChk1 && (conv1Val != 0)) {
            UpdateParticulars2(curr2Val, conv1Val);
        } else {
            defaultInter();
        }*@
        //defaultCheck();
        //updateCurrency2();

        // ---------------------- [[ FUNCTIONS ]] ----------------------
        function updateCurrency2() {
            var val = $(".curr2").find("option:selected").text();
            var id = $(".curr2").find("option:selected").val();
            $("#convertCurr1").text(val);
            $(".curr2-abbr").text(val);
            $("#curr2-lbl").text(val + " Amount");
            $('#interPartList_0__Inter_Particular2_1__Particular_CredCurr_ID').val(id);
            $('#interPartList_0__Inter_Particular3_0__Particular_CredCurr_ID').val(id);
            $('#interPartList_0__Inter_Particular3_1__Particular_CredCurr_ID').val(id);
        }
        function isChk() {
            isChk1 = ('@Model.Inter_Check1' == 'True');
            isChk2 = ('@Model.Inter_Check2' == 'True');
        }
        function UpdateParticulars1(currVal, convVal) {
            var rate = @Model.Inter_Rate;
            if (!($.isNumeric(currVal) && $.isNumeric(convVal) && $.isNumeric(rate))) {
                alert("Invalid amount/s provided.");
            } else {
                currVal = parseFloat(currVal).toFixed(2);
                var curr2 = (parseFloat(convVal) * parseFloat(rate));
                var curr2Dec = (curr2).toFixed(2);
                var parCredit = (parseFloat(convVal)).toFixed(2);
                var parDebit = (parseFloat(currVal) + parseFloat(curr2)).toFixed(2);
                $("#par1-0").text(parDebit);
                $("#par1-1").text(curr2Dec);
                $("#par1-2").text(currVal);
                $("#par2-0").text(curr2Dec);
                $("#par2-1").text(parCredit);
                $("#par3-0").text(parCredit);
                $("#par3-1").text(parCredit);
                $("#par2-0-1").text(rate);
            }
        }
        function UpdateParticulars2(currVal, convVal) {
            var rate = @Model.Inter_Rate;
            if (!($.isNumeric(currVal) && $.isNumeric(convVal) && $.isNumeric(rate))) {
                alert("Invalid amount/s provided.");
            } else {
                var curr1 = (parseFloat(convVal) * parseFloat(rate));
                var curr1Dec = (curr1).toFixed(2);
                var parCredit = (parseFloat(convVal)).toFixed(2);
                var parDebit = (parseFloat(curr1) + parseFloat(currVal)).toFixed(2);
                $("#par1-0").text(parDebit);
                $("#par1-1").text(curr1Dec);
                $("#par1-2").text(currVal);
                $("#par2-0").text(curr1Dec);
                $("#par2-1").text(parCredit);
                $("#par3-0").text(parCredit);
                $("#par3-1").text(parCredit);
                $("#par2-0-1").text(rate);
            }
        }
        function UpdateParticulars4(curr1Val, curr2Val, rateVal, checkBox) {
            if (!($.isNumeric(curr1Val) && $.isNumeric(curr2Val) && $.isNumeric(rateVal))) {
                alert("Invalid amount/s provided.");
            } else if (checkBox == "chk1") {
                var rateValDec = (parseFloat(rateVal).toFixed(4));
                var curr1Dec = (parseFloat(curr1Val).toFixed(2));
                var curr2Dec = (parseFloat(curr2Val).toFixed(2));
                var parCredit = (parseFloat(curr1Val) / parseFloat(rateVal)).toFixed(2);
                var parDebit = (parseFloat(curr1Val) + parseFloat(curr2Val)).toFixed(2);
                $("#convertAmt1").val(parCredit);
                $("#par1-0").text(parDebit);
                $("#par1-1").text(curr2Dec);
                $("#par1-2").text(curr1Dec);
                $("#par2-0").text(curr2Dec);
                $("#par2-1").text(parCredit);
                $("#par3-0").text(parCredit);
                $("#par3-1").text(parCredit);
                $("#par2-0-1").text(rateValDec);
            } else if (checkBox == "chk2") {
                var rateValDec = (parseFloat(rateVal).toFixed(4));
                var curr1Dec = (parseFloat(curr1Val).toFixed(2));
                var curr2Dec = (parseFloat(curr2Val).toFixed(2));
                var parCredit = (parseFloat(curr2Val) / parseFloat(rateVal)).toFixed(2);
                var parDebit = (parseFloat(curr2Val) + parseFloat(curr1Val)).toFixed(2);
                $("#convertAmt2").val(parCredit);
                $("#par1-0").text(parDebit);
                $("#par1-1").text(curr1Dec);
                $("#par1-2").text(curr2Dec);
                $("#par2-0").text(curr1Dec);
                $("#par2-1").text(parCredit);
                $("#par3-0").text(parCredit);
                $("#par3-1").text(parCredit);
                $("#par2-0-1").text(rateValDec);
            }
        }
        function UpdateParticulars3(currAmt) {
            //$(currAmt).val(0);
            $("#par1-0").text(0);
            $("#par1-1").text(0);
            $("#par1-2").text(0);
            $("#par2-0").text(0);
            $("#par2-1").text(0);
            $("#par3-0").text(0);
            $("#par3-1").text(0);
            $("#par2-0-1").text(0);
        }
        ////TEMP FIX
        function computeValuesDDVInter(parent) {
            var pNode = parent;
            var grossAmt = $("#" + pNode.id + " .txtGross").val();

            $("#" + pNode.id + " .txtGross").attr("value", grossAmt);

            var itemNo = pNode.id; //jquery obj
            var chkEwtVal = $("#" + itemNo).find(".chkEwt").is(':checked');
            var vatable = $("#" + itemNo).find(".chkVat").is(':checked');
            if (chkEwtVal) {
                if (vatable) {
                    var vatRate = (Number($("#" + itemNo).find(".txtVat option:selected").text()) / 100);
                    var ewtRate = (Number($("#" + itemNo).find(".txtEwt option:selected").text()) / 100);
                    var netVat = roundNumber(grossAmt / (1 + vatRate), 2);
                    var ewt = roundNumber(netVat * ewtRate, 2);
                    var netEwt = grossAmt - ewt;

                    $("#" + itemNo).find(".txtCredEwt").val(ewt);
                    $("#" + itemNo).find(".txtCredCash").val(roundNumber(netEwt, 2));
                } else {
                    var ewtAmount = grossAmt * (Number($("#" + itemNo).find(".txtEwt option:selected").text()) / 100);
                    $("#" + itemNo).find(".txtCredEwt").val(roundNumber(ewtAmount, 2));
                    $("#" + itemNo).find(".txtCredCash").val(roundNumber((grossAmt - ewtAmount), 2));
                }
            } else {
                $("#" + itemNo).find(".txtCredEwt").val(0);
                $("#" + itemNo).find(".txtCredCash").val(roundNumber(grossAmt, 2));
            }

            var gross = $(".txtGross");
            var credEwt = $(".txtCredEwt");
            var credCash = $(".txtCredCash");

            var grossTotal = 0;
            var ewtSubTotal = 0;
            var cashSubTotal = 0;

            for (var i = 0; i < gross.length; i++) {
                grossTotal += Number(gross[i].value);
            }

            for (var i = 0; i < credEwt.length; i++) {
                ewtSubTotal += Number(credEwt[i].value);
            }

            for (var i = 0; i < credCash.length; i++) {
                cashSubTotal += Number(credCash[i].value);
            }

            $("#grossTotal").val(roundNumber(grossTotal, 2));
            $("#credEwtTotal").val(roundNumber(ewtSubTotal, 2));
            $("#credCashTotal").val(roundNumber(cashSubTotal, 2));
            $("#credTotal").val(roundNumber(Number(ewtSubTotal + cashSubTotal), 2));

            var ccyList = [];
            for (var i = 0; i < $('.txtccy:not(#template_ccy)').length; i++) {
                ccyList.push($($('.txtccy:not(#template_ccy)')[i]).val());
            }
            if ($('.txtccy:not(#template_ccy)').length > 1 && !(ccyList.every((val, i, arr) => val === arr[0]))) {
                $("#grossTotal").val(0.00);
                $("#credEwtTotal").val(0.00);
                $("#credCashTotal").val(0.00);
                $("#credTotal").val(0.00);
            }
        }
    });
</script>
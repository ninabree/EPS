
@{
    ViewData["Title"] = "DMAddAccount_Pending";
    Layout = "~/Views/Shared/_ModalLayout.cshtml";
}

@using ExpenseProcessingSystem.ViewModels.NewRecord
@model NewAccountListViewModel

<div id="table" class="">
    @using (Html.BeginForm("AddAccount_Pending", "Home", FormMethod.Post, new { @class = "validate-form", @id = "tsForm" }))
    {
        <table class="table table-bordered editable-th">
            <tr>
                <th>Account</th>
                <th>Account Code</th>
                <th>Budget Code</th>
                <th>No</th>
                <th>Cust</th>
                <th>Div</th>
                <th>Fund</th>
                <th colspan="2">FBT</th>
                <th colspan="2">Account Group</th>
                <th colspan="2">Currency</th>
                <th></th>
            </tr>
            <tr id="NewAccount-Tr-0">
                <td>@Html.TextBoxFor(m => m.NewAccountVM[0].Account_Name, new { @class = "w-full input voucher-input" })</td>
                <td>@Html.TextBoxFor(m => m.NewAccountVM[0].Account_Code, new { @class = "w-full input voucher-input" })</td>
                <td class="bdgcd">@Html.TextBoxFor(m => m.NewAccountVM[0].Account_Budget_Code, new { @class = "w-full input" })</td>
                <td>@Html.TextBoxFor(m => m.NewAccountVM[0].Account_No, new { @class = "w-full input voucher-input" })</td>
                <td>@Html.TextBoxFor(m => m.NewAccountVM[0].Account_Cust, new { @class = "w-full input voucher-input" })</td>
                <td>@Html.TextBoxFor(m => m.NewAccountVM[0].Account_Div, new { @class = "w-full input voucher-input" })</td>
                <td>@Html.CheckBoxFor(m => m.NewAccountVM[0].Account_Fund, new { @class = "w-full input voucher-input" })</td>
                <td colspan="2">
                    @Html.DropDownListFor(m => m.NewAccountVM[0].Account_FBT_MasterID,
                    Model.FbtList,
                    new { @class = "w-full input" })
                </td>
                <td colspan="2" class="grp">
                    @Html.DropDownListFor(m => m.NewAccountVM[0].Account_Group_MasterID,
                    Model.AccGrp,
                    new { @class = "w-full input", @disabled = true})
                </td>
                <td colspan="2">
                    @Html.DropDownListFor(m => m.NewAccountVM[0].Account_Currency_MasterID,
                    Model.CurrList,
                    new { @class = "w-full input" })
                </td>
                <td>
                    <span class="table-remove glyphicon glyphicon-remove"></span>
                </td>
            </tr>
        </table>
        <input id="fbtList" type="hidden" value="@Model.FbtList" />
        <input id="accgrpList" type="hidden" value="@Model.AccGrp" />
        <input id="currList" type="hidden" value="@Model.CurrList" />
    }
</div>

<script>
    $("[id$='_Account_Fund']").each(function (e) {
        if ($(this).is(':checked')) {
            $(this).parent().siblings("td.grp").find("select").prop("disabled", false);
            $(this).parent().siblings("td.bdgcd").find("input").addClass("voucher-input");
        } else {

            $(this).parent().siblings("td.grp").find("select").prop("disabled", true);
            $(this).parent().siblings("td.bdgcd").find("input").removeClass("voucher-input");
        }
    });
    $("[id$='_Account_Fund']").on("change", function (e) {
        e.stopImmediatePropagation();
        if ($(this).is(':checked')) {
            $(this).parent().siblings("td.bdgcd").find("input").addClass("voucher-input");
            $(this).parent().siblings("td.grp").find("select").prop("disabled", false);
        } else {
            $(this).parent().siblings("td.grp").find("select").prop("disabled", true);
            $(this).parent().siblings("td.grp").find("select option[value='']").attr("selected", true);
            $(this).parent().siblings("td.bdgcd").find("input").removeClass("voucher-input");
        }
    });
</script>
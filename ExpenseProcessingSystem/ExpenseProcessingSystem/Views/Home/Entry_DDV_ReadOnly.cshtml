
@{
    ViewData["Title"] = "Entry_DDV";

    var uid = ViewBag.userID;
}
@using ExpenseProcessingSystem.ViewModels.Entry
@using ExpenseProcessingSystem.ConstantData
@model EntryDDVViewModelList

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<div class="tabContent">
    <input id="_screen" type="hidden" value="ddv" />
    <div id="tbl-lbl" class="flex-sb">
        <div class="dis-inline-block w-20">Date: <p class="dis-inline-block w-70">@Html.TextBoxFor(model => model.expenseDate, new { @readonly = "true", @class = "input w-97" })</p> </div>
        <div class="dis-inline-block"><p class="dis-inline-block">@Html.TextBoxFor(model => model.expenseYear, new { @readonly = "true", @class = "input" })</p> - <p class="dis-inline-block">@Html.TextBoxFor(model => model.expenseId, new { @readonly = "true", @class = "input" })</p></div>
        <div class="dis-inline-block float-r"></div>
    </div>
    <div id="tbl-lbl">
        <div class="dis-inline-block"><p>Payee:</p> </div>
        <div class="dis-inline-block">
            <select data-val="true" data-val-required="The vendor field is required." id="vendorName" name="vendor">
                <option selected="selected" value="@Model.vendor">@Model.vendor_Name</option>
            </select>
        </div>
    </div>
    <div class="flex-c">
        <table class="table table-bordered table-striped voucher-tbl w-97" id="inputTable">
            <colgroup>
                <col style="width:20%;" />
                <col style="width:9%;" />
                <col style="width:3%;" />
                <col style="width:3%;" />
                <col style="width:10%" />
                <col style="width:2%;" />
                <col style="width:5%;" />
                <col style="width:2%;" />
                <col style="width:5%;" />
                <col style="width:3%;" />
                <col style="width:7%;" />
                <col style="width:10%;" />
                <col style="width:10%;" />
                <col style="width:10%;" />
                <col style="width:2%;" />
            </colgroup>
            <thead>
                <tr>
                    <th rowspan="2">Gbase Remarks</th>
                    <th rowspan="2">Account</th>
                    <th rowspan="2">Inter-Entity</th>
                    <th rowspan="2">FBT</th>
                    <th rowspan="2">Department</th>
                    <th colspan="2" rowspan="2">VAT</th>
                    <th colspan="3" rowspan="2">EWT</th>
                    <th rowspan="2">Currency</th>
                    <th>Debit</th>
                    <th colspan="2">Credit</th>
                    <th rowspan="2"></th>
                </tr>
                <tr>
                    <th scope="col">Gross Amount</th>
                    <th scope="col">EWT Amount</th>
                    <th scope="col">Cash</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.EntryDDV.Count; i++)
                {
                    <tr id="item_@i">
                        <td class="p-b-1 p-t-1">
                            <div class="flex-sb">
                                <input value="@Model.EntryDDV[i].GBaseRemarks" class="input100 w-80 GBaseRemarksTitle" disabled />
                                <div id="remark_@i">
                                    <a href="#" class="gRemarks glyphicon glyphicon-folder-open fs-23 m-r-5 gRemarksReadOnly"></a>
                                    @for (int y = 0; y < Model.EntryDDV[i].gBaseRemarksDetails.Count(); y++)
                                    {
                                        @Html.HiddenFor(x => Model.EntryDDV[i].gBaseRemarksDetails[y].docType);
                                        @Html.HiddenFor(x => Model.EntryDDV[i].gBaseRemarksDetails[y].desc);
                                        @Html.HiddenFor(x => Model.EntryDDV[i].gBaseRemarksDetails[y].invNo);
                                        @Html.HiddenFor(x => Model.EntryDDV[i].gBaseRemarksDetails[y].amount);
                                    }
                                </div>
                            </div>
                        </td>
                        <td><input value="@Model.EntryDDV[i].account_Name" class="input100 accName" disabled /></td>
                        <td style="text-align:center">@Html.CheckBoxFor(x => Model.EntryDDV[i].inter_entity, new { @disabled = "true" })</td>
                        <td style="text-align:center">@Html.DisplayFor(x => Model.EntryDDV[i].fbt)</td>
                        <td><input id="@Model.EntryDDV[i].dept" value="@Model.EntryDDV[i].dept_Name" class="input100" disabled /></td>
                        <td style="text-align:center">@Html.CheckBoxFor(x => Model.EntryDDV[i].chkVat, new { @class = "chkVat", @disabled = "true" })</td>
                        <td><input value="@Model.EntryDDV[i].vat_Name" class="input100" disabled /></td>
                        <td style="text-align:center">@Html.CheckBoxFor(x => Model.EntryDDV[i].chkEwt, new { @class = "chkEwt", @disabled = "true" })</td>
                        <td>
                            <input value="@Model.EntryDDV[i].ewt_Name" class="input100" disabled />
                            @Html.HiddenFor(x => x.EntryDDV[i].ewt)
                        </td>
                        <td style="text-align:center"><a class="reqEWTBtn glyphicon glyphicon-list-alt"></a></td>
                        <td>
                            <input value="@Model.EntryDDV[i].ccy_Name" class="input100 txtccy selectDisabled" disabled />
                            @Html.HiddenFor(x=> x.EntryDDV[i].ccy)
                        </td>
                        <td><input value="@Model.EntryDDV[i].debitGross" class="input100 txtGross" disabled /></td>
                        <td><input value="@Model.EntryDDV[i].credEwt" class="input100 txtCredEwt" disabled /></td>
                        <td><input value="@Model.EntryDDV[i].credCash" class="input100 txtCredCash" disabled /></td>
                        <td id="req_@i">
                            @if (Model.EntryDDV[i].interDetails != null)
                            {
                                <a class="expenseInterEntity reqBtn glyphicon glyphicon-list-alt" href="#"></a>
                                <div id="interDtls">
                                    @if (Model.EntryDDV[i].interDetails.interPartList.Count() > 0)
                                    {
                                        @for (int p = 0; p < Model.EntryDDV[i].interDetails.interPartList.Count(); p++)
                                        {
                                            @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].InterPart_ID)
                                            @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].InterPart_Particular_Title)
                                            @if (Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs.Count() > 0)
                                            {
                                                @for (int a = 0; a < Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs.Count(); a++)
                                                {
                                                    @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs[a].Inter_Acc_ID)
                                                    @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs[a].Inter_Amount)
                                                    @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs[a].Inter_Curr_ID)
                                                    @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs[a].Inter_Rate)
                                                    @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.interPartList[p].ExpenseEntryInterEntityAccs[a].Inter_Type_ID)
                                                }
                                            }
                                        }
                                    }
                                </div>
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency1_ID, new { @class = "txtCurr1AbbrID" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency1_ABBR, new { @class = "txtCurr1Abbr" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency1_Amount, new { @class = "txtCurr1Amt" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency2_ID, new { @class = "txtCurr2AbbrID" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency2_ABBR, new { @class = "txtCurr2Abbr" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Currency2_Amount, new { @class = "txtCurr2Amt" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Convert1_Amount, new { @class = "txtConv1Amt" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Convert2_Amount, new { @class = "txtConv2Amt" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Check1, new { @class = "txtChk1" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Check2, new { @class = "txtChk2" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].interDetails.Inter_Rate, new { @class = "txtInterRate" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].ewt_Payor_Name_ID, new { @class = "txtPayor" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].ewt_Payor_Name, new { @class = "txtPayorName" })
                            }
                            else
                            {
                                <a class="reqBtn glyphicon glyphicon-list-alt"></a>
                                @Html.HiddenFor(x => Model.EntryDDV[i].ewt_Payor_Name_ID, new { @class = "txtPayor" })
                                @Html.HiddenFor(x => Model.EntryDDV[i].ewt_Payor_Name, new { @class = "txtPayorName" })
                            }
                        </td>
                    </tr>
                }

                @Html.HiddenFor(x => x.entryID)
                <input value="DDV" id="expenseType" type="hidden" />
                <tr>
                    <td style="border:none; background-color:#f2f2f2" rowspan="2"><a id="addRow" href="#" class="glyphicon glyphicon-plus"></a></td>
                    <td colspan="10" style="text-align:right; border:none; background-color:#f2f2f2">Subtotal : </td>
                    <td rowspan="2"><div class="flex-c"><input type="text" class="input100" readonly id="grossTotal" /></div></td>
                    <td><input type="text" readonly class="input100" id="credEwtTotal" /></td>
                    <td><input type="text" readonly class="input100" id="credCashTotal" /></td>
                </tr>
                <tr>
                    <td colspan="10" style="text-align:right; border:none; background-color:#f2f2f2 ">Total : </td>
                    <td colspan="2"><div class="flex-c"><input type="text" class="input100" readonly id="credTotal" /></div></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="voucherPreview" class="border-solid">
        <div id="tbl-lbl">
            <div class="dis-inline-block"><p>Preview of Voucher:</p></div>
        </div>
        @Html.Partial("DDVPartial")
    </div><div id="entry-status" class="m-t-10 m-b-10">
        <div class="dis-inline-block"><label>Status: </label></div>
        <div class="dis-inline-block">@Html.TextBoxFor(x => x.status, new { @readonly = "true", @class = "input" })</div>
        <div class="dis-inline-block"><label>Approver:</label></div>
        <div class="dis-inline-block">@Html.TextBoxFor(model => model.approver, new { @readonly = "true", @class = "input" })</div>
        <div class="dis-inline-block"><label>Verifier:</label></div>
        <div class="dis-inline-block">
            <p class="dis-inline-block">@Html.TextBoxFor(model => model.verifier_1, new { @readonly = "true", @class = "m-l-5 input" })</p>
            <p class="dis-inline-block">@Html.TextBoxFor(model => model.verifier_2, new { @readonly = "true", @class = "m-l-5 input" })</p>
        </div>
    </div>
    <div id="entry-controls" class="m-b-10">
        @using (Html.BeginForm("VerAppModDDV", "Home", FormMethod.Post, new { @class = "validate-form" }))
        {
            @Html.HiddenFor(x => Model.entryID)
            <div class="flex-sb">
                <div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Save</button></div>

                    @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker)
                    {
                        @if ((Model.statusID == GlobalSystemValues.STATUS_APPROVED) || (Model.statusID == GlobalSystemValues.STATUS_REJECTED) || (Model.statusID == GlobalSystemValues.STATUS_REVERSED))
                        {
                            <div class="dis-inline-block tbl-btn"><button disabled>Delete</button></div>
                            <div class="dis-inline-block tbl-btn"><button disabled>Modify</button></div>
                        }
                        else
                        {
                            <div class="dis-inline-block tbl-btn"><button value="Delete" name="command">Delete</button></div>
                            <div class="dis-inline-block tbl-btn"><button value="Modify" name="command">Modify</button></div>
                        }
                    }
                    else
                    {
                        <div class="dis-inline-block tbl-btn"><button disabled>Delete</button></div>
                        <div class="dis-inline-block tbl-btn"><button disabled>Modify</button></div>
                    }
                </div>

                <div>
                    @if (Model.statusID == GlobalSystemValues.STATUS_POSTED && Model.lastUpdatedDate.Date < DateTime.Now.Date)
                    {
                        if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker
                            || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_1_id
                            || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_2_id
                            || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.approver_id)
                        {
                            <div class="dis-inline-block tbl-btn"><button id="reversal_entry" value="Reversal" name="command">Create Reversal Entry</button></div>
                        }
                        else
                        {
                            <div class="dis-inline-block tbl-btn"><button id="reversal_entry" disabled>Create Reversal Entry</button></div>
                        }
                    }
                    else
                    {
                        <div class="dis-inline-block tbl-btn"><button id="reversal_entry" disabled>Create Reversal Entry</button></div>
                    }
                </div>
                <div>
                    @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker
                   || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_1_id
                   || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_2_id
                   || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.approver_id)
                    {
                        <div class="dis-inline-block tbl-btn"><button id="printBir" value="printBir">Print BIR Certificate</button></div>
                    }
                </div>

            </div>
            <div class="flex-sb">
                <div>
                    @if (HttpContextAccessor.HttpContext.Session.GetString("accessType") == GlobalSystemValues.ROLE_MAKER && uid == Model.maker.ToString())
                    {
                        <div class="dis-inline-block tbl-btn"><button disabled>Approve/Verify</button></div>
                    }
                    else
                    {
                        if (Model.statusID != GlobalSystemValues.STATUS_PENDING &&
                            Model.statusID != GlobalSystemValues.STATUS_VERIFIED)
                        {
                            <div class="dis-inline-block tbl-btn"><button disabled>Approve/Verify</button></div>
                            <div class="dis-inline-block tbl-btn"><button disabled>Reject</button></div>
                        }
                        else
                        {
                            <div class="dis-inline-block tbl-btn"><button value="@HttpContextAccessor.HttpContext.Session.GetString("accessType")" name="command">Approve/Verify</button></div>
                            <div class="dis-inline-block tbl-btn"><button value="Reject" name="command">Reject</button></div>
                        }
                    }
                </div>
                <div>
                </div>
                <div>
                </div>
            </div>
        }
    </div>

    <div id="modalDiv">
        @Html.Partial("ModalGbase")
    </div>
    @Html.Partial("ModalPartial2")
</div>

<script type="text/javascript" src="~/js/EntryScripts.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        var myModal2 = $('.myModal2');
        var modalDiv2 = $(myModal2).find('div div');
        var modalDivHeader2 = $(modalDiv2).find('.modal-header2');
        var modalDivBody2 = $(modalDiv2).find('.modal-body2');
        var modalDivFooter2 = $(modalDiv2).find('.modal-footer2');

        $("tr[id^='item_']").each(function (ind, item) {
            computeValuesDDVRead($(item)[0]);
        });
        //checks each checkbox and enables corresponding modals
        CheckEachEWT();
        CheckEachInter();

        //EWT
        $("table").on("click", ".expenseEWT", function (e) {
            e.stopImmediatePropagation();
            var pNode = $(this.parentNode)[0].parentNode;
            var taxpayor = $("#" + pNode.id).find(".txtPayor").val()

            //remove prev contents
            modalDivBody2.empty();
            modalDivHeader2.find('h4').remove();
            modalDivFooter2.find("#add_row_btn").remove();
            modalDivFooter2.find("#saveBtnEntry").remove(); 

            //set modal header title
            modalDivHeader2.append('<h4 class="modal-title">EWT Information</h4>');
            modalDivBody2.load("@Url.Action("EntryExpenseEWT", "Modal")", {
                "id": pNode.id,
                "taxpayor": taxpayor
            }, function (response, status, xhr) {
                if (status == "error") {
                    alert("Something went wrong.");
                }
                });
            $(myModal2).modal('show');
        });
        //Inter Entity
        $(".expenseInterEntity").click(function (e) {
            e.stopImmediatePropagation();
            var pNode = $(this.parentNode)[0].parentNode;
            var idNo = pNode.id.substring(5);
            var id = pNode.id;
            
            var curr1_Abbr_ID = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency1_ID').val();
            var curr1_Abbr_Name = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency1_ABBR').val();
            var curr1_Amt = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency1_Amount').val();
            var curr1_Chk = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Check1').val();
            var conv1_Amt = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Convert1_Amount').val();
            var curr2_Abbr_ID = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency2_ID').val();
            var curr2_Abbr_Name = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency2_ABBR').val();
            var curr2_Amt = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Currency2_Amount').val();
            var curr2_Chk = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Check2').val();
            var conv2_Amt = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Convert2_Amount').val(); 
            var interRate = $("#" + pNode.id).find('#EntryDDV_' + idNo + '__interDetails_Inter_Rate').val();
            var remarksTitle = $("#" + pNode.id).find("td div .GBaseRemarksTitle").val();
            var account = $("#" + pNode.id).find("td .accName").val();
            var accountID = $("#" + pNode.id).find("#EntryDDV_" + idNo + "__interDetails_interPartList_" + idNo + "__ExpenseEntryInterEntityAccs_" + idNo + "__Inter_Acc_ID").val();

            //remove prev contents
            modalDivBody2.empty();
            modalDivHeader2.find('h4').remove();
            modalDivFooter2.find("#add_row_btn").remove(); //
            modalDivFooter2.find("#saveBtnEntry").remove(); 
            //set modal header title
            modalDivHeader2.append('<h4 class="modal-title">Inter-Entity</h4>');
            //set modal body content
            modalDivBody2.load("@Url.Action("EntryExpenseInterEntity_READONLY", "Modal")", {
                "id": id,
                "interRate": interRate,
                "account": account,
                "remarksTitle": remarksTitle,
                "Curr1AbbrID": curr1_Abbr_ID,
                "Curr1AbbrName": curr1_Abbr_Name,
                "Curr1Amt": curr1_Amt,
                "Curr2AbbrID": curr2_Abbr_ID,
                "Curr2AbbrName": curr2_Abbr_Name,
                "Curr2Amt": curr2_Amt,
                "Chk1": curr1_Chk,
                "Conv1Amt": conv1_Amt,
                "Chk2": curr2_Chk,
                "Conv2Amt": conv2_Amt,
                "accID": accountID

            }, function (response, status, xhr) {
                if (status == "error") {
                    alert("Something went wrong.");
                }
            });

            $(myModal2).modal('show');

        });
        function currenableVATEWT(pNode, val) {

            var inter = $("#EntryDDV_" + pNode.substring(5) + "__inter_entity");
            var isInter = $(inter).is(":checked");
            if (val == "31" && (!isInter)) {
                //enable VAT and EWT when INTER ENTITY
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkVat").prop('disabled', false);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkEwt").prop('disabled', false);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkVat").trigger("change");
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkEwt").trigger("change");
            } else {
                //disable VAT and EWT when INTER ENTITY
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkVat").prop('disabled', true);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkEwt").prop('disabled', true);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkVat").prop("checked", false);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkEwt").prop("checked", false);
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkVat").trigger("change");
                $("#" + pNode).find("#EntryDDV_" + pNode.substring(5) + "__chkEwt").trigger("change");

            }
        }
        function CheckEachEWT() {
            $(".chkEwt").each(function (index, item) {
                updateExpenseEWTDDV(item);
            });
        }

        function CheckEachInter() {
            $(".chkInter").each(function (index, item) {
                updateExpenseInterDDV(item);
            });
        }
        function updateExpenseEWTDDV(chkEwt) {
            var pNode = String($(chkEwt.parentNode)[0].parentNode.id);
            var btnAttr = $("#" + pNode).find(".reqEWTBtn");
            if (chkEwt.checked == true) {
                btnAttr.attr("href", "#");
                btnAttr.addClass("expenseEWT");
            } else {
                btnAttr.removeAttr("href");
                btnAttr.removeClass("expenseEWT");
            }
        }
        function updateExpenseInterDDV(chkInter) {

            var pNode = String($(chkInter.parentNode)[0].parentNode.id);
            var btnAttr = $("#" + pNode).find("#req_" + pNode.substring(5)).find(".reqBtn");

            if (chkInter.checked == true) {
                btnAttr.attr("href", "#");
                btnAttr.attr("class", "expenseInterEntity reqBtn glyphicon glyphicon-list-alt");
                //disable the gbase remarks for that row
                $("#" + pNode).find("#remark_" + pNode.substring(5)).find("a").removeClass("gRemarks");
                //remove the gbase remarks details for that row
                $("#" + pNode).find("#remark_" + pNode.substring(5)).find("input").each(function () {
                    $(chkInter).remove();
                });
                //resetDebitCredit(pNode);
                computeValuesDDV($(chkInter.parentNode)[0].parentNode);
            } else {
                btnAttr.removeAttr("href");
                btnAttr.attr("class", "reqBtn glyphicon glyphicon-list-alt");
                //enable GBase remarks
                $("#" + pNode).find("#remark_" + pNode.substring(5)).find("a").addClass("gRemarks");
                $("#" + pNode).find("#req_" + pNode.substring(5)).find("input[id^='EntryDDV_" + pNode.substring(5) + "__interDetails_']").each(function () {
                    $(chkInter).val();
                });
                //resetDebitCredit(pNode);
                computeValuesDDV($(chkInter.parentNode)[0].parentNode);
            }
        }
        function computeValuesDDVRead(parent) {

            var pNode = parent;

            var gross = $(".txtGross");
            var credEwt = $(".txtCredEwt");
            var credCash = $(".txtCredCash");

            var isInter = $("#" + pNode.id).find("#EntryDDV_" + pNode.id.substring(5) + "__inter_entity").is(':checked');
            var btnAttr = $("#" + pNode.id).find("#req_" + pNode.id.substring(5)).find(".reqBtn");
            if (isInter) {
                btnAttr.attr("href", "#");
                btnAttr.attr("class", "expenseInterEntity reqBtn glyphicon glyphicon-list-alt");
            } else {
                btnAttr.removeClass("expenseInterEntity");
            }

            var grossTotal = 0;
            var ewtSubTotal = 0;
            var cashSubTotal = 0;

            for (var i = 0; i < gross.length; i++) {
                grossTotal += Number(gross[i].value);
            }

            for (var i = 0; i < credEwt.length; i++) {
                ewtSubTotal += Number(credEwt[i].value);
            }

            for (var i = 0; i < credCash.length; i++) {
                cashSubTotal += Number(credCash[i].value);
            }

            $("#grossTotal").val(grossTotal);
            $("#credEwtTotal").val(ewtSubTotal);
            $("#credCashTotal").val(cashSubTotal);
            $("#credTotal").val(Number(ewtSubTotal + cashSubTotal));
        }
    });
</script>
<script type="text/javascript">
    $(function () {
        @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_1_id
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_2_id
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.approver_id)
        {
            <Text>
            $("#entry-controls").on("click", "#printBir", function (e) {
                var link = [
                @foreach (var item in Model.birForms)
                {
                    <Text>
                         "/Home/Generate2307File?_vendor=@item.vendor&_ewt=@item.ewt&_tax=@item.vat&amount=@item.amount&approver=@item.approver&expID=@Model.entryID",
                    </Text>
                }
                    ""
                ];

                for (var i = 0; i < link.length-1;i++) {
                    window.open(link[i]);
                }

                return false;
            });
            </Text>
        }

    });
</script>

@{
    ViewData["Title"] = "Entry_NC";

    var uid = ViewBag.userID;
    var usd = ViewBag.USDmstr;
    var jpy = ViewBag.JPYmstr;
    var php = ViewBag.PHPmstr;
}
@using ExpenseProcessingSystem.ViewModels.Entry
@using ExpenseProcessingSystem.ConstantData
@model EntryNCViewModelList

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var role = HttpContextAccessor.HttpContext.Session.GetString("accessType");
    var isMaker = int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker;
    var isVerifier = int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_1_id ||
     int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_2_id;
    var isApprover = int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.approver_id;
    var aVerifier = role == GlobalSystemValues.ROLE_VERIFIER;
    var anApprover = role == GlobalSystemValues.ROLE_APPROVER;
}
<div class="tabContent">
    <input id="_screen" type="hidden" value="nc" />
    <div id="tbl-lbl" class="flex-sb">
        <div class="dis-inline-block w-20">Date: <p class="dis-inline-block w-70">@Html.DisplayFor(model => model.expenseDate, new { @readonly = "true", @class = "input w-97" })</p> </div>
    </div>
    <div id="tbl-lbl">
        <div class="dis-inline-block"><p>Category of Entries:</p></div>
        <div class="dis-inline-block">
            @Html.DisplayFor(x => x.EntryNC.NC_Category_Name)
        </div>
    </div>

    <div id="nc_container" class="border-solid">
        <table id="NCPartialTbl" class="table table-bordered voucher-tbl" style="background-color: #fff; text-align: center">
            <thead>
                <tr>
                    <th rowspan="1" colspan="3">Remarks</th>
                    <th rowspan="2" colspan="1" class="cat-hidden">Vendor</th>
                    <th rowspan="2" colspan="1" class="cat-hidden">Tax Rate</th>
                    <th rowspan="2" colspan="3">Accounts</th>
                    <th rowspan="2">Inter-Rate</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Debit</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Credit</th>
                </tr>
                <tr>
                    <th colspan="1">Description</th>
                    <th colspan="2">Period</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.EntryNC != null && Model.EntryNC.ExpenseEntryNCDtls.Count > 0)
                {
                    @for (int i = 0; i < Model.EntryNC.ExpenseEntryNCDtls.Count; i++)
                    {
                        <tr id="item_@i" class="">
                            <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })</td>
                            <td colspan="2">
                                @Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Period, new { @type = "date", @class = "" })
                            </td>
                         
                            <td class="cat-hidden" colspan="1" rowspan="@Model.EntryNC.ExpenseEntryNCDtls[0].ExpenseEntryNCDtlAccs.Count">
                                @Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_Name, new { @readonly = "true", @class = "w-full cat-hidden" })
                            </td>
                            <td class="cat-hidden" colspan="1" rowspan="@Model.EntryNC.ExpenseEntryNCDtls[0].ExpenseEntryNCDtlAccs.Count">
                                @Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_Title, new { @readonly = "true", @class = "w-full cat-hidden" })
                            </td>
                            <td colspan="3">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                            <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, new { @class = "ncVar", @disabled = "disabled", @readonly = "true" })</td>
                            @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                            {

                                <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar" })</td>
                                <td></td>
                                <td></td>
                            }
                            else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                                    Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                            {
                                <td></td>
                                <td></td>
                                <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                            }
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                        </tr>

                        @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count; j++)
                        {
                            <tr id="item_@i" class="">
                                <td></td>
                                <td colspan="2"></td>
                                <td colspan="3">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                                <td></td>
                                @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                                {

                                    <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                    <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar" })</td>
                                    <td></td>
                                    <td></td>
                                }
                                else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                                    Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                                {
                                    <td></td>
                                    <td></td>
                                    <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                    <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                                }
                            </tr>

                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                        }
                        <tr class="NC_spacing_row"><td class="cat-hidden" colspan="2"></td><td colspan="11"></td></tr>
                    }
                }
                @Html.HiddenFor(x => x.EntryNC.NC_Category_ID)
                @Html.HiddenFor(x => x.category_of_entry)
                @Html.HiddenFor(x => x.expenseDate)
            </tbody>
        </table>

        @if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_LS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
            </table>
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_JS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Inter-Entity Liability</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_IE_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_IE_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_IE_TotalAmt, new { @readonly = "true" })</td>
                </tr>
            </table>
            @Html.HiddenFor(x => x.EntryNC.NC_DebitAmt)
            @Html.HiddenFor(x => x.EntryNC.NC_CredAmt)
            @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PETTY_CASH_REPLENISHMENT
            || Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl" style="background-color: #fafafa; border: 2px solid #ccc !important; margin-bottom: 20px!important">
                @if (!(Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL))
                {
                    <tr style="border-bottom: 2px solid #ccc !important;">
                        <td colspan="2">Total</td>
                        <td colspan="6"></td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                        <td colspan="1" class="border-solid"></td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                    </tr>
                    <tr class="NC_spacing_row"><td colspan="11"></td></tr>
                }
                else
                {
                    @Html.HiddenFor(x => x.EntryNC.NC_DebitAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_CredAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
                }
                <tr>
                    <td colspan="11"><label class="float-l">CDD Instruction Sheet</label></td>
                </tr>
                <tr id="NC_PCR1">
                    <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })</td>
                    <td colspan="2">
                        @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Period, new { @type = "date", @class = "hidden" })
                    </td>

                    <td colspan="3">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                    <td class="voucher-inter">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, new { @class = "ncVar", @disabled = "disabled", @readonly = "true" })</td>
                    @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                    {
                        <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                        <td class="" id="">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                        <td></td>
                        <td></td>
                    }
                    else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                        Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                    {
                        <td></td>
                        <td></td>
                        <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                        <td class="" id="">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                    }
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                </tr>

                @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.Count; j++)
                {
                    <tr id="NC_PCR2">
                        <td></td>
                        <td colspan="2"></td>
                        <td colspan="3">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                        <td></td>
                        @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                        {
                            <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                            <td class="" id="">@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                            <td></td>
                            <td></td>
                        }
                        else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                            Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                        {
                            <td></td>
                            <td></td>
                            <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                            <td>@Html.DisplayFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                        }
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                    </tr>
                }
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
            </table>
        }
        else
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.DisplayFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
            </table>
        }
    </div>

    <div id="entry-status" class="m-t-10 m-b-10">
        <div class="dis-inline-block"><label>Status: </label></div>
        <div class="dis-inline-block">@Html.DisplayFor(x => x.status, new { @readonly = "true", @class = "input" })</div>
        <div class="dis-inline-block"><label>Approver:</label></div>
        <div class="dis-inline-block">@Html.DisplayFor(model => model.approver, new { @readonly = "true", @class = "input" })</div>
        <div class="dis-inline-block"><label>Verifier:</label></div>
        <div class="dis-inline-block">
            <p class="dis-inline-block">@Html.DisplayFor(model => model.verifier_1, new { @readonly = "true", @class = "m-l-5 input" })</p>
            <p class="dis-inline-block">@Html.DisplayFor(model => model.verifier_2, new { @readonly = "true", @class = "m-l-5 input" })</p>
        </div>
    </div>
    <div id="entry-controls" class="m-b-10">
        @{
            var isEWT = (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PSSC || Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PCHC ||
                         Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_MISCELLANEOUS_ENTRIES);
            var enableSave = "disabled";
            var enableDelete = (Model.statusID == GlobalSystemValues.STATUS_PENDING ||
                                  Model.statusID == GlobalSystemValues.STATUS_REJECTED) && (isMaker) ? "" : "disabled";
            var enableModify = (Model.statusID == GlobalSystemValues.STATUS_PENDING ||
                                  Model.statusID == GlobalSystemValues.STATUS_REJECTED) && (isMaker) ? "" : "disabled";

            var enableApproveVerify = ((Model.statusID == GlobalSystemValues.STATUS_PENDING) &&
                                        ((aVerifier) || (anApprover))) && (!isMaker) ? "" : "disabled";
            var enableReject = ((Model.statusID == GlobalSystemValues.STATUS_PENDING) && (anApprover)) && (!isMaker) ? "" : "disabled";

            var enableBIR = ((Model.statusID == GlobalSystemValues.STATUS_REVERSED ||
                                Model.statusID == GlobalSystemValues.STATUS_FOR_PRINTING ||
                                Model.statusID == GlobalSystemValues.STATUS_FOR_CLOSING ||
                                Model.statusID == GlobalSystemValues.STATUS_POSTED) && isEWT) ? "" : "disabled";
            var enablePrint = (Model.statusID == GlobalSystemValues.STATUS_REVERSED ||
                                Model.statusID == GlobalSystemValues.STATUS_FOR_PRINTING ||
                                Model.statusID == GlobalSystemValues.STATUS_FOR_CLOSING ||
                                Model.statusID == GlobalSystemValues.STATUS_POSTED) ? "" : "disabled";

            var enableReversal = (Model.statusID == GlobalSystemValues.STATUS_FOR_PRINTING ||
                                Model.statusID == GlobalSystemValues.STATUS_FOR_CLOSING) ? "" : "disabled";
        }

        @using (Html.BeginForm("VerAppModNC", "Home", FormMethod.Post, new { @class = "validate-form" }))
        {
            @Html.HiddenFor(x => Model.entryID)
            @Html.HiddenFor(x => Model.EntryNC.NC_Category_ID)
            @if (isMaker || isVerifier || isApprover || aVerifier || anApprover)
            {
                <div class="flex-sb">
                    <div>
                        <div class="dis-inline-block"><button class="tbl-btn" @enableSave>Save</button></div>
                        <div class="dis-inline-block"><button class="tbl-btn btnEntryAction" @enableDelete value="Delete" name="command">Delete</button></div>
                        <div class="dis-inline-block"><button class="tbl-btn btnEntryAction" @enableModify value="Modify" name="command">Modify</button></div>
                        <div class="dis-inline-block"><button class="tbl-btn btnEntryAction" @enableApproveVerify value="@role" name="command">Approve/Verify</button></div>
                        <div class="dis-inline-block"><button class="tbl-btn btnEntryAction" @enableReject value="Reject" name="command">Reject</button></div>
                    </div>
                    <div>
                        <div class="dis-inline-block"><button class="tbl-btn" @enableBIR id="printBir" value="printBir">Print BIR Certificate</button></div>
                        @if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PETTY_CASH_REPLENISHMENT)
                        {
                            <div class="dis-inline-block"><button class="tbl-btn" @enablePrint id="printBir" value="PrintCDD" name="command">Print CDD Instruction Sheet</button></div>
                        }
                        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL &&
                        (Model.EntryNC.ExpenseEntryNCDtls[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID == @usd ||
                        Model.EntryNC.ExpenseEntryNCDtls[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID == @jpy))
                        {
                            <div class="dis-inline-block"><button class="tbl-btn" @enablePrint id="printBir" value="PrintCDD_RET" name="command">Print CDD Instruction Sheet</button></div>
                        }
                        <div class="dis-inline-block"><button class="tbl-btn btnEntryAction" id="reversal_entry" @enableReversal value="Reversal" name="command">Create Reversal Entry</button></div>
                    </div>
                </div>
            }
            <input type="hidden" name="command" id="btnID" />
        }
    </div>
    <div id="modalDiv">
        @Html.Partial("ModalPartial")
    </div>
</div>

<script type="text/javascript" src="~/js/EntryScripts.js"></script>
<script type="text/javascript">
    $(function () {
        hiddencols();
        function hiddencols() {
            var catID = @Model.EntryNC.NC_Category_ID;
            if (catID == @GlobalSystemValues.NC_PSSC +"" || catID == @GlobalSystemValues.NC_PCHC +"" || catID == @GlobalSystemValues.NC_MISCELLANEOUS_ENTRIES +"") {
                $('#NCPartialTbl').find(".cat-hidden").removeClass("hidden");
            } else {
                $('#NCPartialTbl').find(".cat-hidden").addClass("hidden");
            }
        }
        @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.maker
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_1_id
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.verifier_2_id
          || int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserID")) == Model.approver_id)
        {
            <Text>
            $("#entry-controls").on("click", "#printBir", function (e) {
                var link = [
                @foreach (var item in Model.birForms)
                {
                    <Text>
                         "/Home/Generate2307File?_vendor=@item.vendor&_ewt=@item.ewt&_tax=@item.vat&amount=@item.amount&approver=@item.approver&expID=@Model.entryID",
                    </Text>
                }
                    ""
                ];

                for (var i = 0; i < link.length-1;i++) {
                    window.open(link[i]);
                }

                return false;
            });
            </Text>
        }

    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#alert').text() != "") {
            $('#divAlertWindow').show();
        }
    });
</script>
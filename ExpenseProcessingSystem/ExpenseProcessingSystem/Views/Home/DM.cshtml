
@{
    ViewData["Title"] = "DM";
}
@using ExpenseProcessingSystem.ViewModels
@model DMViewModel


<div class="tab-content-cont m-t-10">
    <div id="tbl-lbl">
        <div class="dis-inline-block"><p>Data List Title:</p></div>
        <div class="dis-inline-block">
            <select id="dm-tbl">
                <option value="DMPartial_Vendor">Vendor</option>
                <option value="DMPartial_Check">Check</option>
                <option value="DMPartial_Acc">Account</option>
                <option value="DMPartial_AccGroup">Account Group</option>
                <option value="DMPartial_Dept">Department</option>
                <option value="DMPartial_VAT">Value Added Tax</option>
                <option value="DMPartial_FBT">Fringe Benefit Tax</option>
                <option value="DMPartial_TR">Tax Rates</option>
                <option value="DMPartial_Curr">Currency</option>
                <option value="DMPartial_RegEmp">Regular Employee</option>
                <option value="DMPartial_TempEmp">Temporary Employee</option>
                <option value="DMPartial_Cust">Customer</option>
                <option value="DMPartial_BCS">BIR Cert Signatory</option>
            </select>
        </div>
    </div>
    <div id="partialContainer">
        <div id="partcontains"></div>
    </div>
    <input type="hidden" id="entryCheckTypes" />
</div>


<script type="text/javascript">
    $(document).ready(function () {
        var sortOrder = '@ViewData["sortOrder"]';
        var currentFilter = '@ViewData["currentFilter"]';
        var searchString = '@ViewData["searchString"]';
        var page = '@ViewData["page"]';
        var partial = '@ViewData["partialName"]';
        var colName = '@ViewData["colName"]';

        initPartial();
        $("#partialContainer").on("change", "#paginationInput", function (e) {
            var $pageInput = $(this);
            //get hidden value of partial view in Data Maintenance
            var partial = $('input#partialVal').val();

            var data = $pageInput.data("value"),
                val = $pageInput.val();

            if (data !== val) {
                $pageInput.data("value", val);
                var url = window.location.pathname + '?page=' + val;
                //check if in data maintenance
                if (window.location.pathname == "/Home/DM") {
                    url = window.location.pathname + '?partialName=' + partial + '&page=' + val;
                }
                window.location = url;
            }
        });
        //------------[ FUNCTIONS ]---------------
        function initPartial() {
            $('select#dm-tbl option[value=' + partial + ']').attr('selected', 'selected');

            var filterData = { 'sortOrder': sortOrder, 'currentFilter': currentFilter, 'colName': colName, 'searchString': searchString, 'page': page };


            $('#partcontains').load("/Partial/" + partial, filterData, function (response, status, xhr) {
                if (status == "error") {
                    alert("Something went wrong.");
                    return false;
                } else {
                    isSearchDisabled();
                    //disable approve/reject button upon initial load in DM
                    defaultDisableAll();
                    //Pagination Input Field
                    $pageInput = $('#paginationInput');
                    $pageInput.data("value", $pageInput.val());

                    ////DM ON LOAD
                    $('input#entryCheckTypes').val("");
                    //get column # of status per table
                    var countDoc = $('#partialContainer #partcontains div div table thead tr th').length - 2;
                    var chkCount = $('input.tbl-chk[type="checkbox"]:checked').length;
                    var remainingCheckStatDoc = $('input.tbl-chk[type="checkbox"]:checked').parent().siblings(":eq(" + countDoc + ")").text();

                    if (chkCount <= 0) {
                        defaultApproved();
                    } else {
                        if (remainingCheckStatDoc == "Approved") {
                            defaultApproved();
                        } else {
                            defaultForApproval();
                        }
                    }
                }
            });
        }
    /*//////////////////////////////////////////////////////////////////
    [ Events ]*/
        //change content of partial view on select on change
        $('select#dm-tbl').change(function () {
            if (isSessionTimeout() != true) {
                $('input#filterPartialName').val(this.value);

                var filterData = { 'sortOrder': sortOrder, 'currentFilter': currentFilter, 'partialName': this.value, 'colName': colName, 'searchString': searchString, 'page': 1 };


                $('#partcontains').load("/Partial/" + this.value, filterData, function (response, status, xhr) {
                    if (status == "error") {
                        alert("Something went wrong.");
                    } else {
                        $('input#entryCheckTypes').val();
                        isSearchDisabled();
                        //disable approve/reject button upon initial load in DM
                        defaultDisableAll();
                        //Pagination Input Field
                        $pageInput = $('#paginationInput');
                        $pageInput.data("value", $pageInput.val());

                        ////DM ON LOAD
                        $('input#entryCheckTypes').val("");
                        //get column # of status per table
                        var countDoc = $('#partialContainer #partcontains div div table thead tr th').length - 2;
                        var chkCount = $('input.tbl-chk[type="checkbox"]:checked').length;
                        var remainingCheckStatDoc = $('input.tbl-chk[type="checkbox"]:checked').parent().siblings(":eq(" + countDoc + ")").text();

                        if (chkCount <= 0) {
                            defaultApproved();
                        } else {
                            if (remainingCheckStatDoc == "Approved") {
                                defaultApproved();
                            } else {
                                defaultForApproval();
                            }
                        }
                    }
                });
            }
        });
        //reset search filter values
        $(document).on("click", "#full-list-btn", function (e) {
            e.stopImmediatePropagation();
            $('input[id^= "DMFilters_"]').each(function (i, obj) {
                $(this).val("");
                if ($(this).attr('data-val-range-min') == "0") {
                    $(this).val("0");
                } else if ($(this).attr('type') == "datetime-local") {
                    $(this).val("0001-01-01T00:00:00.000");
                }
            });
            $('#search-frm').submit();
        });

        //enables/disables controls in DM depending on entry status
        $(document).on("change", "input.tbl-chk", function (e) {
            e.stopImmediatePropagation();
            //disable all buttons
            defaultDisableAll();
            //get column # of status per table
            var count = $('.table_DM_Main').find('th').length - 2;
            var stat = $(this).parent().siblings(":eq(" + count + ")").text();
            var chkCount = $('input.tbl-chk[type="checkbox"]:checked').length;
            var remainingCheckStat = $('input.tbl-chk[type="checkbox"]:checked').parent().siblings(":eq(" + count + ")").text();
            //to check if entries are of same status
            var txtVal = $('input#entryCheckTypes').val();
            //get table name
            var tblName = $('#dm-tbl').find(":selected").text();

            var creatorId = $(this).parent().find("[id$='_Creator_ID']").val();
            var userId = $("#UI").val();
            //check if all selected chkboxs have same statuses
            var isSameStat = true;
            var firstChk = $('input.tbl-chk[type="checkbox"]:checked').first().parent().siblings(":eq(" + count + ")").text()
            $('input.tbl-chk[type="checkbox"]:checked').each(function (index) {
                console.log(firstChk);
                if ($(this).parent().siblings(":eq(" + count + ")").text() != firstChk) {
                    isSameStat = false;
                    return false;
                }
            });
            //alert(creatorId + " ------ " + userId);
            if (!isSameStat && chkCount <= 2) {
                alert("Kindly check rows with the same status only.");
                $('.rec').prop('disabled', true);
                return false;
            }
            else if (creatorId == userId/* && chkCount <= 1*/) {
                if (stat != "APPROVED") {
                    defaultOnlyAdd();
                } else {
                    defaultApproved();
                }
                if (this.checked == false && chkCount <= 0) {
                    defaultApproved();
                }
            } else {
                //if there is no previously checked box
                if (txtVal != "") {
                    $('input#entryCheckTypes').val(stat);
                    // if change is to uncheck or check the element
                    if (this.checked == true) {
                        if (!isSameStat) {
                            alert("Kindly check rows with the same status only.");
                            $('.rec').prop('disabled', true);
                        }
                        else if (txtVal == stat) {
                            //In BCS, only one row can be selected for edit
                            if (chkCount >= 2 && stat == "APPROVED" && (tblName == "BIR Cert Signatory")) {
                                $('.apprv-rec').prop('disabled', true);
                                $('.rej-rec').prop('disabled', true);
                                $('.add-rec').prop('disabled', false);
                                $('.edit-rec').prop('disabled', true);
                                $('.delete-rec').prop('disabled', false);
                            }
                            else if (stat == "APPROVED") {
                                defaultApproved();
                            } else {
                                defaultForApproval();
                            }
                        }
                        else if (remainingCheckStat == stat) {
                            if (remainingCheckStat == "APPROVED") {
                                defaultApproved();
                            } else {
                                defaultForApproval();
                            }
                        } else {
                            $('.rec').prop('disabled', true);
                        }
                    }
                    //if this element is unchecked
                    else {
                        //if no element selected
                        if (chkCount <= 0) {
                            $('input#entryCheckTypes').val("");
                            defaultApproved();
                        }
                        //if there is remaining, filter btns according to stat of other selected elements
                        else {
                            if (remainingCheckStat == "APPROVED") {
                                defaultApproved();
                            } else {
                                defaultForApproval();
                            }
                        }
                    }
                } else {
                    $('input#entryCheckTypes').val(stat);
                    //format only avail buttons for clicked checkbox 
                    if (remainingCheckStat == "APPROVED") {
                        defaultApproved();
                    } else {
                        defaultForApproval();
                    }
                }
            }
        });

        /*//////////////////////////////////////////////////////////////////
        [ Modal ]*/
        setInterval(function () {
            $('div.modal-backdrop.fade.in').not(':first').remove();
        }, 1);

    /*//////////////////////////////////////////////////////////////////
    [ Functions ]*/

        //default buttons in DM
        function defaultDisableAll() {
            $('.apprv-rec').prop('disabled', true);
            $('.rej-rec').prop('disabled', true);
            $('.add-rec').prop('disabled', true);
            $('.edit-rec').prop('disabled', true);
            $('.delete-rec').prop('disabled', true);
        }
        function defaultDM() {
            $('.add-rec').prop('disabled', false);
            $('.edit-rec').prop('disabled', false);
            $('.delete-rec').prop('disabled', false);
        }
        function defaultForApproval() {
            $('.apprv-rec').prop('disabled', false);
            $('.rej-rec').prop('disabled', false);
        }
        function defaultApproved() {
            $('.add-rec').prop('disabled', false);
            $('.edit-rec').prop('disabled', false);
            $('.delete-rec').prop('disabled', false);
        }
        function defaultOnlyAdd() {
            $('.add-rec').prop('disabled', false);
        }
        function isSearchDisabled() {
            var noFilter = true;
            $('input[id^= "DMFilters_"]').each(function (i, obj) {
                if ($(this).val() == "") {
                } else if ($(this).val() == "0") {
                } else if ($(this).val() == "0001-01-01T00:00:00.000") {
                } else {
                    noFilter = false;
                    return false;
                }
            });
            //disable if no entries
            if ($('.tab-tbl tbody tr').length <= 0 && noFilter) {
                $('#search-btn').attr("disabled", "disabled");
                $('#full-list-btn').attr("disabled", "disabled");
            }else {
                $('#search-btn').removeAttr("disabled");
                $('#full-list-btn').removeAttr("disabled");
            }
        }

        /*Possibly no longer needed(session check is inside the controller?) please check*/
        function isSessionTimeout() {
            var tmp = false;
            $.ajax({
                url: '/Account/checkSession',
                type: "POST",
                dataType: 'json',
                contentType: 'application/json',
                async: false,
                processData: false,
                cache: false,
                data: '{}',
                success: function (data) {
                    //FOR SESSION TIMEOUT CHECK
                    if (data == true) {
                        alert("Your session has timed out. Kindly re-login. Thank you.");
                        tmp = true;
                        location.href = "/Account/Login";
                    }
                },
                error: function (xhr) {
                    alert('error');
                }
            });
            return tmp;
        }
        function ajaxCall(url, data) {
            return $.ajax({
                url: url,
                type: "POST",
                data: data,
            });
        }
    });
</script>

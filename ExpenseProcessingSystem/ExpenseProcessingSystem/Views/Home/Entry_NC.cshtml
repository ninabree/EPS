
@{
    ViewData["Title"] = "Entry_NC";
}
@using ExpenseProcessingSystem.ViewModels.Entry
@model EntryNCViewModelList
@inject IJsonHelper Json;

<div class="tabContent">
    <input id="_screen" type="hidden" value="nc" />
    @using (Html.BeginForm("AddNewNC", "Home", FormMethod.Post, new { @class = "validate-form" }))
    {
        <div id="tbl-lbl" class="flex-sb">
            <div class="dis-inline-block w-20">Date: <p class="dis-inline-block w-70">@Html.TextBoxFor(model => model.expenseDate, new { @readonly = "true", @class = "input w-97" })</p> </div>
        </div>
        <div id="tbl-lbl">
            <div class="dis-inline-block"><p>Category of Entries:</p></div>
            <div class="dis-inline-block">
                @Html.DropDownListFor(m => m.category_of_entry, Model.systemValues.category_of_entries, new { id = "categoryName" })
            </div>
        </div>
        <div id="nc_container" class="border-solid">
        </div>
        <div id="entry-status" class="m-t-10 m-b-10">
            <div class="dis-inline-block"><label>Status: </label></div>
            <div class="dis-inline-block">@Html.TextBoxFor(x => x.status, new { @readonly = "true", @class = "input" })</div>
            <div class="dis-inline-block"><label>Approver:</label></div>
            <div class="dis-inline-block">@Html.TextBoxFor(model => model.approver, new { @readonly = "true", @class = "input" })</div>
            <div class="dis-inline-block"><label>Verifier:</label></div>
            <div class="dis-inline-block">
                <p class="dis-inline-block">@Html.TextBoxFor(model => model.verifier_1, new { @readonly = "true", @class = "m-l-5 input" })</p>
                <p class="dis-inline-block">@Html.TextBoxFor(model => model.verifier_2, new { @readonly = "true", @class = "m-l-5 input" })</p>
            </div>
        </div>
        <div id="entry-controls" class="m-b-10">
            <div class="flex-sb">
                <div>
                    <div class="dis-inline-block tbl-btn"><button>Save</button></div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Delete</button></div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Modify</button></div>
                </div>
                <div>
                    <div class="dis-inline-block tbl-btn"><button id="reversal_entry" disabled>Create Reversal Entry</button></div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Delete GBase Post</button></div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Liquidate</button></div>
                </div>
                <div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Print CDD Instruction Sheet</button></div>
                </div>

            </div>
            <div class="flex-sb">
                <div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Approve/Verify</button></div>
                    <div class="dis-inline-block tbl-btn"><button disabled>Reject</button></div>
                </div>
            </div>
        </div>
    }

    <div id="modalDiv">
        @Html.Partial("ModalPartial")
    </div>

</div>
<script type="text/javascript">
    $(document).ready(function () {
        var cont = $('#nc_container');

        var partial = '@ViewData["partialName"]';

        initPartial();
        //------------[ FUNCTIONS ]---------------
        function initPartial() {
            $('select#categoryName option[value=' + partial + ']').attr('selected', 'selected');
            //var _entryID = $("select#categoryName option:selected").val();
            var _entryID = "";
            alert(_entryID);

            $.ajax({
                url: '/Partial/NC_Partial_' + partial,
                type: "Get",
                data: { 'entryID': _entryID },
                async: true,
                datatype: "json",
                cache: false,
                success: function (data) {
                    cont.empty();
                    cont.html(data);
                    //isSearchDisabled()
                }
            });
        }
        ////change content of partial view on select on change
        //$('select#dm-tbl').change(function () {
        //    if (isSessionTimeout() != true) {
        //        $('input#filterPartialName').val(this.value);
        //        $.ajax({
        //            url: '/Partial/' + this.value,
        //            type: "Get",
        //            data: { sortOrder: sortOrder, currentFilter: currentFilter, searchString: searchString, page: page },
        //            //data: model,
        //            async: false,
        //            processData: false,
        //            datatype: "json",
        //            cache: false,
        //            success: function (data) {
        //                cont.empty();
        //                cont.html(data);
        //                isSearchDisabled()
        //            }
        //        });
        //    }
        //});
        function isSessionTimeout() {
            var tmp = false;
            $.ajax({
                url: '/Account/checkSession',
                type: "POST",
                dataType: 'json',
                contentType: 'application/json',
                async: false,
                processData: false,
                cache: false,
                data: '{}',
                success: function (data) {
                    //FOR SESSION TIMEOUT CHECK
                    if (data == true) {
                        alert("Your session has timed out. Kindly re-login. Thank you.");
                        tmp = true;
                        location.href = "/Account/Login";
                    }
                },
                error: function (xhr) {
                    alert('error');
                }
            });
            return tmp;
        }
        //function isSearchDisabled() {
        //    var noFilter = true;
        //    $('input[id^= "DMFilters_"]').each(function (i, obj) {
        //        if ($(this).val() == "") {
        //        } else if ($(this).val() == "0") {
        //        } else if ($(this).val() == "0001-01-01T00:00:00.000") {
        //        } else {
        //            noFilter = false;
        //            return false;
        //        }
        //    });
        //    //disable if no entries
        //    if ($('.tab-tbl tbody tr').length <= 0 && noFilter) {
        //        $('#search-btn').attr("disabled", "disabled");
        //        $('#full-list-btn').attr("disabled", "disabled");
        //    }else {
        //        $('#search-btn').removeAttr("disabled");
        //        $('#full-list-btn').removeAttr("disabled");
        //    }
        //}
    });
</script>
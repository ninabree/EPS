
@{
    Layout = null;
    var cs = Model.accList.FirstOrDefault(x => x.accNo == "68").accID;
    var csUSD = Model.accList.FirstOrDefault(x => x.accNo == "76").accID;
    var intrRF = Model.accList.FirstOrDefault(x => x.accNo == "72").accID;
    var intrFR = Model.accList.FirstOrDefault(x => x.accNo == "77").accID;
    var petty = Model.accList.FirstOrDefault(x => x.accNo == "95").accID;
    var ewt = Model.accList.FirstOrDefault(x => x.accNo == "98").accID;
}
@using ExpenseProcessingSystem.ConstantData
@using ExpenseProcessingSystem.ViewModels.Entry
@model EntryNCViewModelList
@functions{
    public string SetClassCompSusp(int catID, int csID, string suffix, int cs, int csUSD, int intrRF, int intrFR, int petty)
    {
        return (csID == cs && catID == 7) ? "nc-cdd-comp-" + suffix : (csID == cs) ? "nc-comp-susp-" + suffix : ((csID == cs && catID == 8) || ((csID == csUSD || csID == cs) && catID == 9)) ? "nc-comp-susp-" + suffix : (csID == intrRF || csID == intrFR) ? "nc-inter-" + suffix : (csID == petty) ? "nc-cdd-petty-" + suffix : "";
    }
    object getHtmlAttributes(int catID, int count)
    {
        if (!(catID == 8 && count == 3) && !(catID == 9 && count == 1) &&  !(catID == 11))
        {
            return new { @class = "ncVar", @readonly = "true" };
        }
        return new { @class = "ncVar" };
    }
    object getHtmlAttributesDebit(int catID, int count, string suffixClass)
    {
        if (catID == 9 && count == 1)
        {
            return new { @class = "ncVar " + suffixClass, @readonly = "true" };
        }
        return new { @class = "ncVar " + suffixClass };
    }
    object getHtmlAttributesCredit(int catID, int count, string suffixClass)
    {
        if ((catID != 4) && (catID != 5) && (catID != 11))
        {
            return new { @class = "ncVar " + suffixClass, @readonly = "true" };
        }
        return new { @class = "ncVar " + suffixClass };
    }
    public string SetRateClass(int catID, int count)
    {
        return ((catID == 8 && count == 3) || (catID == 9 && count == 1) || (catID == 11)) ? "voucher-input" : "";
    }
    public string SetClass(int catID, int count, string type)
    {
        string temp = "voucher-input";

        if (type == "cd")
        {
            temp = "";
        }
        if (catID == 9 && count == 1 && type == "db")
        {
            temp = "";
        }else if ((type == "cd") && (catID == 4 || catID == 5 || catID == 11))
        {
            temp = "voucher-input";
        }
        return temp;
    }
    public string SetRemarksClass(int catID)
    {
        return ((catID != 9) && (catID != 11)) ? "" : "voucher-input";
    }
    public string SetEnableToCredit(int catID)
    {
        return ((catID != 4) && (catID != 5)) ? "true" : "false";
    }
}
<div>
    @using (Html.BeginForm("AddNewNC", "Home", FormMethod.Post, new { @class = "nc-form" }))
    {
        <table id="NCPartialTbl" class="table table-bordered voucher-tbl" style="background-color: #fff; text-align: center">
            <thead>
                <tr>
                    <th rowspan="1" colspan="3">Remarks</th>
                    <th rowspan="2" colspan="1" class="cat-hidden">Vendor</th>
                    <th rowspan="2" colspan="1" class="cat-hidden">Tax Rate</th>
                    <th rowspan="2" colspan="3">Accounts</th>
                    <th rowspan="2">Inter-Rate</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Debit</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Credit</th>
                </tr>
                <tr>
                    <th colspan="1">Description</th>
                    <th colspan="2">Period</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.EntryNC != null && Model.EntryNC.ExpenseEntryNCDtls.Count > 0)
                {
                    @if (@Model.EntryNC.NC_Category_ID == 11)
                    {
                        @for (int i = 0; i < Model.EntryNC.ExpenseEntryNCDtls.Count; i++)
                        {
                            <tr id="item_@i">
                                <td class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc)
                                </td>
                                <td colspan="2" class="voucher-input">
                                    @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Period, new { @type = "date", @class = "" })
                                </td>
                                <td colspan="1" rowspan="4" class="cat-hidden">
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID)" class="w-full input ven-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID)">
                                        @if (@Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID > 0)
                                        {
                                            @foreach (var groepModel in Model.vendorList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            @foreach (var groepModel in Model.vendorList)
                                            {
                                                if (@groepModel.Value == @Model.vendorList[0].Value)
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td colspan="1" rowspan="4" class="cat-hidden">
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID)" class="w-full input ven-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID)">
                                        @if (@Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID > 0)
                                        {
                                            @foreach (var groepModel in Model.trList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                        else
                                        {

                                            @foreach (var groepModel in Model.trList)
                                            {
                                                if (@groepModel.Value == @Model.trList[0].Value)
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td colspan="3" class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name)" class="w-full input acc-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name)">
                                        @if (@Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID > 0)
                                        {
                                            @foreach (var groepModel in Model.accountList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            @foreach (var groepModel in Model.accountList)
                                            {
                                                if (@groepModel.Value == @Model.accountList[0].Value)
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="@SetRateClass(@Model.EntryNC.NC_Category_ID, @i)">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, @getHtmlAttributes(@Model.EntryNC.NC_Category_ID, @i))</td>
                                @* DEBIT *@
                                <td>
                                    <select id="curr[@i]_[0]" class="w-full input curr-sel misc-curr-0" name="curr[@i]_[0]">
                                        @foreach (var groepModel in Model.currList)
                                        {
                                            if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "db") db" id="deb_@i">
                                    <input class="ncVar misc-@i amt-db-@i-0" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." type="text" value="0">
                                </td>

                                @* CREDIT *@
                                <td>
                                    <select id="curr[@i]_[0]" class="w-full input curr-sel misc-curr-0" name="curr[@i]_[0]">
                                        @foreach (var groepModel in Model.currList)
                                        {
                                            if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "cd") cd" id="cred_@i">
                                    <input class="ncVar misc-@i amt-cd-@i-0" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." type="text" value="0">
                                </td>
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                            </tr>
                            @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count; j++)
                            {
                                <tr id="">
                                    <td></td>
                                    <td colspan="2" class=""></td>
                                    <td colspan="3" class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                        <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name)" class="w-full input acc-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name)">
                                            @foreach (var groepModel in Model.accountList)
                                            {
                                                if (@groepModel.Value == @Model.accountList[0].Value)
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="@SetRateClass(@Model.EntryNC.NC_Category_ID, @i)">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Inter_Rate, @getHtmlAttributes(@Model.EntryNC.NC_Category_ID, @i))</td>
                                    @* DEBIT *@
                                    <td>
                                        <select id="curr[@i]_[@j]" class="w-full input curr-sel misc-curr-@j" name="curr[@i]_[@j]">
                                            @foreach (var groepModel in Model.currList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "db") db" id="deb_@i">
                                        <input class="ncVar misc-@j amt-db-@i-@j" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." type="text" value="0">
                                    </td>

                                    @* CREDIT *@
                                    <td>
                                        <select id="curr[@i]_[@j]" class="w-full input curr-sel misc-curr-@j" name="curr[@i]_[@j]">
                                            @foreach (var groepModel in Model.currList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "cd") cd" id="cred_@i">
                                        <input class="ncVar misc-@j amt-cd-@i-@j" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." type="text" value="0">
                                    </td>
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                                </tr>
                            }
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[1].ExpNCDtlAcc_Amount)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[1].ExpNCDtlAcc_Curr_ID)
                            @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count > 2)
                            {
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[2].ExpNCDtlAcc_Amount)
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[2].ExpNCDtlAcc_Curr_ID)
                            }
                            @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count > 2)
                            {
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[3].ExpNCDtlAcc_Amount)
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[3].ExpNCDtlAcc_Curr_ID)
                            }
                        }
                    }
                    else
                    {
                        @for (int i = 0; i < Model.EntryNC.ExpenseEntryNCDtls.Count; i++)
                        {
                                <tr id="item_@i">
                                    <td class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                        @if ((@Model.EntryNC.NC_Category_ID == 9))
                                        {
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc)
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })
                                        }
                                    </td>
                                    <td colspan="2" class="voucher-input">
                                        @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Period, new { @type = "date", @class = "" })
                                    </td>

                                    @if (@Model.EntryNC.NC_Category_ID == 4 || @Model.EntryNC.NC_Category_ID == 5)
                                    {
                                        <td class="cat-hidden" colspan="1" rowspan="3">
                                            <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID)" class="w-full input ven-sel cat-hidden" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID)">
                                                @if (@Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID > 0)
                                                {
                                                    @foreach (var groepModel in Model.vendorList)
                                                    {
                                                        if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID + "")
                                                        {
                                                            <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@groepModel.Value">@groepModel.Text</option>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    @foreach (var groepModel in Model.vendorList)
                                                    {
                                                        if (@groepModel.Value == @Model.vendorList[0].Value)
                                                        {
                                                            <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@groepModel.Value">@groepModel.Text</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </td>
                                        <td class="cat-hidden" colspan="1" rowspan="3">
                                            <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID)" class="w-full input ven-sel cat-hidden" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID)">
                                                @if (@Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID > 0)
                                                {
                                                    @foreach (var groepModel in Model.trList)
                                                    {
                                                        if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID + "")
                                                        {
                                                            <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@groepModel.Value">@groepModel.Text</option>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    @foreach (var groepModel in Model.trList)
                                                    {
                                                        if (@groepModel.Value == @Model.trList[0].Value)
                                                        {
                                                            <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@groepModel.Value">@groepModel.Text</option>
                                                        }
                                                    }
                                                }

                                            </select>
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="cat-hidden" colspan="1" rowspan="2">
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Vendor_ID, new { @readonly = "true", @class = "w-full cat-hidden" })
                                        </td>
                                        <td class="cat-hidden" colspan="1" rowspan="2">
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_TR_ID, new { @readonly = "true", @class = "w-full cat-hidden" })
                                        </td>
                                    }
                                    <td colspan="3">
                                        @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })
                                    </td>
                                    <td class="@SetRateClass(@Model.EntryNC.NC_Category_ID, @i)">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, @getHtmlAttributes(@Model.EntryNC.NC_Category_ID, @i))</td>
                                    @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                                    {

                                        <td>
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                        </td>
                                        <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "db")" id="deb_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, @getHtmlAttributesDebit(@Model.EntryNC.NC_Category_ID, @i, @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID, "db", cs, csUSD, intrRF, intrFR, petty)))</td>
                                        <td></td>
                                        <td></td>
                                    }
                                    else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                                        Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                                    {
                                        <td></td>
                                        <td></td>
                                        <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                        <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "cd")" id="cred_@i">
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount,
                                            @getHtmlAttributesCredit(@Model.EntryNC.NC_Category_ID, @i,
                                            @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID, "cd", cs, csUSD, intrRF, intrFR, petty)))
                                        </td>
                                    }
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                                </tr>

                            @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count; j++)
                            {
                                <tr id="item_@i">
                                    <td></td>
                                    <td colspan="2"></td>
                                    <td colspan="3">
                                        @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })
                                    </td>
                                    <td></td>
                                    @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                                    {

                                        <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                        <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "db")" id="deb_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, @getHtmlAttributesDebit(@Model.EntryNC.NC_Category_ID, @i, @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID, "db", cs, csUSD, intrRF, intrFR, petty)))</td>
                                        <td></td>
                                        <td></td>
                                    }
                                    else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                                    Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                                    {
                                        <td></td>
                                        <td></td>
                                        <td>
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                        </td>
                                        <td class="@SetClass(@Model.EntryNC.NC_Category_ID, @i, "cd")" id="cred_@i">
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount,
                                            @getHtmlAttributesCredit(@Model.EntryNC.NC_Category_ID, @i,
                                            @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID, "cd", cs, csUSD, intrRF, intrFR, petty)))
                                        </td>
                                    }
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                                </tr>
                            }
                            <tr class="NC_spacing_row"><td colspan="13"></td></tr>
                        }
                    }
                }
                @Html.HiddenFor(x => x.EntryNC.NC_Category_ID)
                @Html.HiddenFor(x => x.category_of_entry)
                @Html.HiddenFor(x => x.expenseDate)
                @Html.HiddenFor(x => x.entryID)
                <input type="hidden" name="command" id="btnID" />
                <tr>
                    <td class="float-l">
                        @if (@Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_LS_PAYROLL ||
         @Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_TAX_REMITTANCE ||
         @Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_DEPRECIATION ||
         @Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_JS_PAYROLL ||
         @Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_MISCELLANEOUS_ENTRIES)
                        {
                            <button id="add_new_nc_row" type="button" class="glyphicon glyphicon-plus"></button>
                        }
                        <select id="accOptions" style="display: none;">
                            @foreach (var opt in Model.accountList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                        <select id="currOptions" style="display: none;">
                            @foreach (var opt in Model.currList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                        <select id="venOptions" style="display: none;">
                            @foreach (var opt in Model.vendorList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                        <select id="trOptions" style="display: none;">
                            @foreach (var opt in Model.trList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                    </td>
                </tr>
            </tbody>
        </table>

        @if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_LS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class = "hidden" })</td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
            </table>
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_JS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Inter-Entity Liability</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_TotalAmt, new { @readonly = "true" })</td>
                </tr>
            </table>
            @Html.HiddenFor(x => x.EntryNC.NC_DebitAmt)
            @Html.HiddenFor(x => x.EntryNC.NC_CredAmt)
            @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PETTY_CASH_REPLENISHMENT
            || Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl" style="background-color: #fafafa; border: 2px solid #ccc !important; margin-bottom: 20px!important">
                @if (!(Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL))
                {
                    <tr style="border-bottom: 2px solid #ccc !important;">
                        <td colspan="2">Total</td>
                        <td colspan="6"></td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                        <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class = "hidden" })</td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                    </tr>
                    <tr class="NC_spacing_row"><td colspan="13"></td></tr>
                }
                else
                {
                    @Html.HiddenFor(x => x.EntryNC.NC_DebitAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_CredAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
                }
                <tr>
                    <td colspan="11"><label class="float-l">CDD Instruction Sheet</label></td>
                </tr>
                <tr id="NC_PCR1">
                    <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })</td>
                    <td colspan="2" class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                        @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Period, new { @type = "date", @class = "hidden" })
                    </td>

                    <td colspan="3">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                    <td class="voucher-inter">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, new { @class = "ncVar", @disabled = "disabled", @readonly = "true" })</td>
                    @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                    {
                        <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                        <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                        <td></td>
                        <td></td>
                    }
                    else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT ||
                        Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                    {
                        <td></td>
                        <td></td>
                        <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                        <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                    }
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                    @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                </tr>

                @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.Count; j++)
                {
                    <tr id="NC_PCR2">
                        <td></td>
                        <td colspan="2"></td>
                        <td colspan="3">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                        <td></td>
                        @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                        {
                            <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                            <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                            <td></td>
                            <td></td>
                        }
                        else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT || 
                            Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_EWT)
                        {
                            <td></td>
                            <td></td>
                            <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                            <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                        }
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                    </tr>
                }
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
            </table>
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_MISCELLANEOUS_ENTRIES)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                @Html.HiddenFor(x => x.EntryNC.NC_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
            </table>
        }
        else
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan = "5" ></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan = "1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class = "hidden" })</td>
                    <td colspan = "1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
            </table>
        }
    }
</div>
<script>
    $(document).ready(function () {
        var dbType = @GlobalSystemValues.NC_DEBIT;
        var cdType = @GlobalSystemValues.NC_CREDIT;
        var ewtType = @GlobalSystemValues.NC_EWT;

        var computeFunction = function (event) {
            if (event.target.classList.contains("ncVar")) {
                computeValsNC();
            }
        }
        document.addEventListener("change", computeFunction, false);
        computeValsNC();
        hiddencols();
        function hiddencols() {
            var catID = $("select#categoryName option:selected").val();
            if (catID == @GlobalSystemValues.NC_PSSC +"" || catID == @GlobalSystemValues.NC_PCHC +"" || catID == @GlobalSystemValues.NC_MISCELLANEOUS_ENTRIES +"") {
                $('#NCPartialTbl').find(".cat-hidden").removeClass("hidden");
            } else {
                $('#NCPartialTbl').find(".cat-hidden").addClass("hidden");
            }
        }


        if ($("#entryID").val() == "") {
            $("#entryID").val(0);
        }
        $('#NCPartialTbl').on('change', '.misc-0', function () {
            var vals = $(this).val();
            var type = $(this).parent().hasClass("db") ? dbType : $(this).parent().hasClass("cd") ? cdType : $(this).parent().hasClass("ewt") ? ewtType : "";
            $(this).parent().parent().find("td .misc-0").not(this).val(0);
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount']").val(vals);
            $(this).parent().siblings("[id$='ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Type_ID']").val(type);
        });
        $('#NCPartialTbl').on('change', '.misc-1', function () {
            var vals = $(this).val();
            var type = $(this).parent().hasClass("db") ? dbType : $(this).parent().hasClass("cd") ? cdType : $(this).parent().hasClass("ewt") ? ewtType : "";
            $(this).parent().parent().find("td .misc-1").not(this).val(0);
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount']").val(vals);
            $(this).parent().siblings("[id$='ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Type_ID']").val(type);
        });
        $('#NCPartialTbl').on('change', '.misc-2', function () {
            var vals = $(this).val();
            var type = $(this).parent().hasClass("db") ? dbType : $(this).parent().hasClass("cd") ? cdType : $(this).parent().hasClass("ewt") ? ewtType : "";
            $(this).parent().parent().find("td .misc-2").not(this).val(0);
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_2__ExpNCDtlAcc_Amount']").val(vals);
            $(this).parent().siblings("[id$='ExpenseEntryNCDtlAccs_2__ExpNCDtlAcc_Type_ID']").val(type);
        });
        $('#NCPartialTbl').on('change', '.misc-3', function () {
            var vals = $(this).val();
            var type = $(this).parent().hasClass("db") ? dbType : $(this).parent().hasClass("cd") ? cdType : $(this).parent().hasClass("ewt") ? ewtType : "";
            $(this).parent().parent().find("td .misc-3").not(this).val(0);
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_3__ExpNCDtlAcc_Amount']").val(vals);
            $(this).parent().siblings("[id$='ExpenseEntryNCDtlAccs_3__ExpNCDtlAcc_Type_ID']").val(type);
        });
        $('#NCPartialTbl').on('change', '.acc-sel', function () {
            var vals = $(this).val();
            if (vals == @ewt) {
                $(this).parent().siblings("[id$='DtlAcc_Type_ID']").val(3);
            }
        });
        //MISC ENTRIES CURR DROPDOWN CHANGED
        $('#NCPartialTbl').on('change', '.misc-curr-0', function () {
            var vals = $(this).val();
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount']").val(vals);
        });
        $('#NCPartialTbl').on('change', '.misc-curr-1', function () {
            var vals = $(this).val();
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount']").val(vals);
        });
        $('#NCPartialTbl').on('change', '.misc-curr-2', function () {
            var vals = $(this).val();
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_2__ExpNCDtlAcc_Amount']").val(vals);
        });
        $('#NCPartialTbl').on('change', '.misc-curr-3', function () {
            var vals = $(this).val();
            $(this).parent().parent().siblings("[id$='ExpenseEntryNCDtlAccs_3__ExpNCDtlAcc_Amount']").val(vals);
        });

        $('#NCPartialTbl').on('change', '.curr-sel', function () {
            var categoryID = $("select#categoryName option:selected").val();
            var vals = $(this).find("option:selected").val();
            var texts = $(this).find("option:selected").text();

            if (categoryID == @GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL+"") {
                $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Curr_Name").val(texts);
                $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Curr_ID").val(vals);

                $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Curr_Name").val(texts);
                $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Curr_ID").val(vals);

                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Curr_Name").val(texts);
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Curr_ID").val(vals);

                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Curr_Name").val(texts);
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Curr_ID").val(vals);
            }
        });
        $('#NCPartialTbl').on('update', function () {
            computeValsNC();
        });

        function computeValsNC() {
            var totalDebit = 0;
            var totalCredit = 0;
            var totalCSDebit = 0;
            var totalCSCredit = 0;

            var subtotalPCRPettyDeb = 0;
            var subtotalCredMisc = 0;
            var subtotalPCRPettyCred = 0;
            var subtotalPCRCompDeb = 0;
            var subtotalPCRCompCred = 0;
            var subtotalIEDeb = 0;
            var subtotalIECred = 0;

            var categoryID = $("select#categoryName option:selected").val();
            $("tr[id^='item_']").each(function (index, element) {
                var idNo = $(element).attr('id').substr(5);
                var rate = $(element).find("#ExpNCDtlAcc_Inter_Rate").val();

                var subtotalDeb = 0;
                var subtotalCred = 0;

                var subtotalCSDeb = 0;
                var subtotalCSCred = 0;

                //collecting values for Debit
                $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                    var debitVal = parseFloat($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").val());
                    if (categoryID == "8") {
                        if ((idNo != 2) && (idNo != 3)) {
                            subtotalDeb += debitVal;
                        }
                    } else if (categoryID == "11") {
                        debitVal = parseFloat($(".amt-db-" + idNo + "-" + ind + "").val());
                        var rateVal = parseFloat($("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Inter_Rate']").val());
                        if (rateVal != 0) {
                            debitVal *= rateVal;
                        }
                        subtotalDeb += debitVal;
                    } else {
                        subtotalDeb += debitVal;
                    }

                    //set values of Credit from Debit
                    var tempInd = parseInt(ind) + 1;
                    if ((categoryID == "4") || (categoryID == "5") || (categoryID == "11") || ((categoryID == "8") && (idNo == 3)) || ((categoryID == "9") && (idNo == 1))) {
                        //nothing will happen when inputting values in debit of PSSC, PCHC and MISC ENTRIES
                        //the value will be manually inputed by the user

                        //nothing will happen when passing the 4th row in Petty Cash Replenishment
                        //the value will only be inputted when rate and credit is not empty
                    } else if ((categoryID == "8") && (idNo == 2)) {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(debitVal);
                    } else if ((categoryID == "9") && (idNo == 0)) {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(debitVal.toFixed(2));
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', debitVal.toFixed(2));
                    } else {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal.toFixed(2));
                    }
                });
                //collect values for Credit
                    //if (categoryID == "11") {
                    //    alert($(element).find("td.cd").find($("[class^='amt-cd-']")).length);
                    //    $(element).find("td.cd").find($("[class^='amt-cd-']")).each(function (ind, el) {
                    //        subtotalCred = parseFloat($(".amt-cd-" + idNo + "-" + ind + "").val());
                    //        alert(subtotalCred);
                    //    });
                    //} else {
                        $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                            subtotalCred += parseFloat($(el).find("[id$='__ExpNCDtlAcc_Amount']").val());
                        });
                    //}

                //In RETURN OF JSPAYROLL, set value to 2nd Entry Debit
                if ((categoryID == "9") && (idNo == 1) && ($(element).find("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").length != 0)) {
                    var rateVal = $(element).find("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").val();
                    var debitVal = $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val();
                    if (((rateVal != "0") && ($.isNumeric(rateVal))) && ((debitVal != "0") && ($.isNumeric(debitVal)))) {
                        var credVal = parseFloat(rateVal) * parseFloat(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(credVal.toFixed(2));
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").attr('value', credVal.toFixed(2));
                    } else {
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(0);
                    }
                }
                //In MISC ENTRIES, set value to 1st Entry ACC ID
                if (categoryID == "11") {
                    var accId1 = $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_Name option:selected").val();
                    if (accId1 != "0") {
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_ID").val(accId1);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_ID").attr('value', accId1);
                    }
                    var accId2 = $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_Name option:selected").val();
                    if (accId2 != "0") {
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_ID").val(accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_ID").attr('value', accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_2__ExpNCDtlAcc_Acc_ID").val(accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_2__ExpNCDtlAcc_Acc_ID").attr('value', accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_3__ExpNCDtlAcc_Acc_ID").val(accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_3__ExpNCDtlAcc_Acc_ID").attr('value', accId2);
                    }
                }

                //For Computation of Computer Suspense Balance Checker in LSPAYROLL AND JSPAYROLL AND RETURN OF JS PAYROLL
                if ((categoryID == "1") || (categoryID == "8") || (categoryID == "9")) {
                    //alert("ID NO => " + idNo);
                    $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                        var currID = $("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Curr_ID").val();
                        //alert("CurrID => " + currID + ", CatID => " + categoryID);
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-comp-susp-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            if ((categoryID == "8") && ((idNo != 1) && (idNo != 3) && (idNo != 4))) {
                                debitVal = 0;
                            }
                            //} else if ((categoryID == "9") /*&& (currID != "1" /*MasterID of USD*/ /*currID != "50" *//*MasterID of YEN*/) {
                            //    alert("HERE ZERO VAL");
                            //    debitVal = 0;
                            //}
                            subtotalCSDeb += debitVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-inter-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalIEDeb += debitVal;
                        }
                    });

                    $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                        var tempInd = parseInt(ind) + 1;
                        var currID = $("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Curr_ID").val();
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-comp-susp-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            if ((categoryID == "9") && (currID != "9")) {
                                creditVal = 0;
                            }
                            subtotalCSCred += creditVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-inter-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalIECred += creditVal;
                        }
                            
                    });
                }
                
                
                totalDebit += parseFloat(subtotalDeb);
                if (categoryID != "11") {
                    totalCredit += parseFloat(subtotalCred);
                } else if (categoryID == "11")
                {
                    subtotalCredMisc += parseFloat($("input.amt-cd-" + idNo + "-0").val());
                    subtotalCredMisc += parseFloat($("input.amt-cd-" + idNo + "-1").val());
                    subtotalCredMisc += parseFloat($("input.amt-cd-" + idNo + "-2").val());
                    subtotalCredMisc += parseFloat($("input.amt-cd-" + idNo + "-3").val());
                    totalCredit += parseFloat(subtotalCredMisc);
                }

                totalCSDebit += parseFloat(subtotalCSDeb);
                totalCSCredit += parseFloat(subtotalCSCred);
            });
            
            $("#EntryNC_NC_DebitAmt").val(parseFloat(totalDebit).toFixed(2));
            $("#EntryNC_NC_CredAmt").val(parseFloat(totalCredit).toFixed(2));
            $("#EntryNC_NC_TotalAmt").val(parseFloat(totalDebit).toFixed(2));


            $("#EntryNC_NC_IE_DebitAmt").val(parseFloat(subtotalIEDeb).toFixed(2));
            $("#EntryNC_NC_IE_CredAmt").val(parseFloat(subtotalIECred).toFixed(2));
            $("#EntryNC_NC_IE_TotalAmt").val((parseFloat(subtotalIEDeb) + parseFloat(subtotalIECred)).toFixed(2));

            $("#EntryNC_NC_CS_DebitAmt").val(parseFloat(totalCSDebit).toFixed(2));
            $("#EntryNC_NC_CS_CredAmt").val(parseFloat(totalCSCredit).toFixed(2));
            $("#EntryNC_NC_CS_TotalAmt").val((parseFloat(totalCSDebit) + parseFloat(totalCSCredit)).toFixed(2));

            //Assign values to CDD IS in Return of JS Payroll
            if (categoryID == "9") {
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(parseFloat(totalCSDebit).toFixed(2));
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(parseFloat(subtotalIECred).toFixed(2));
            }
            //For Computation of Computer Suspense Balance Checker in Petty Cash Replenishment
            $("tr[id^='item_']").each(function (index, element) {
                if (categoryID == "7") {
                    var idNo = $(element).attr('id').substr(5);
                    $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-petty-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRPettyDeb += debitVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-comp-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRCompDeb += debitVal;
                        }
                    });
                    $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                        var tempInd = parseInt(ind) + 1;
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-petty-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRPettyCred += creditVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-comp-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRCompCred += creditVal;
                        }
                    });
                }

            });

            if (categoryID == "7") {
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(parseFloat(subtotalPCRPettyDeb).toFixed(2))
                //$("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").parent().siblings("td:eq(6)").text(parseFloat(subtotalPCRPettyCred).toFixed(2))
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(parseFloat(subtotalPCRCompCred).toFixed(2))
                //$("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").parent().siblings("td:eq(5)").text(parseFloat(subtotalPCRCompDeb).toFixed(2))
            }
        }
    });
</script>
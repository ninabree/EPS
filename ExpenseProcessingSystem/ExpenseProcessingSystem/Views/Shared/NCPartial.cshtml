
@{
    Layout = null;
}
@using ExpenseProcessingSystem.ConstantData
@using ExpenseProcessingSystem.ViewModels.Entry
@model EntryNCViewModelList
@functions{
    public string SetClassCompSusp(int catID, int csID, string suffix)
    {
        return (csID == 454) ? "nc-comp-susp-" + suffix : (csID == 487 && catID == 8) ? "nc-comp-susp-" + suffix : (csID == 492) ? "nc-inter-" + suffix : (csID == 486) ? "nc-cdd-petty-" + suffix : (csID == 487 && catID == 7) ? "nc-cdd-comp-" + suffix : "";
    }
    object getHtmlAttributes(int catID, int count)
    {
        if (!(catID == 8 && count == 3) && !(catID == 9 && count == 1) && !(catID == 10 && count == 1) && !(catID == 11))
        {
            return new { @class = "ncVar", @readonly = "true" };
        }
        return new { @class = "ncVar" };
    }
    object getHtmlAttributesDebit(int catID, int count, string suffixClass)
    {
        if ((catID == 8 && count == 3) || (catID == 9 && count == 1) || (catID == 10 && count != 0))
        {
            return new { @class = "ncVar " + suffixClass, @readonly = "true" };
        }
        return new { @class = "ncVar " + suffixClass };
    }
    public string SetRateClass(int catID, int count)
    {
        return ((catID == 8 && count == 3) || (catID == 9 && count == 1) || (catID == 10 && count == 1) || (catID == 11)) ? "voucher-input" : "";
    }
    public string SetDebitClass(int catID, int count)
    {
        return ((catID == 8 && count == 3) || (catID == 9 && count == 1)) || (catID == 10 && count != 0)? "" : "voucher-input";
    }
    public string SetRemarksClass(int catID)
    {
        return ((catID != 9) && (catID != 10) && (catID != 11)) ? "" : "voucher-input";
    }
}
<div>
    @using (Html.BeginForm("AddNewNC", "Home", FormMethod.Post, new { @class = "nc-form" }))
    {
        <table id="NCPartialTbl" class="table table-bordered voucher-tbl" style="background-color: #fff; text-align: center">
            <thead>
                <tr>
                    <th rowspan="1" colspan="3">Remarks</th>
                    <th rowspan="2" colspan="3">Accounts</th>
                    <th rowspan="2">Inter-Rate</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Debit</th>
                    <th rowspan="2">CCY</th>
                    <th rowspan="2">Credit</th>
                </tr>
                <tr>
                    <th colspan="1">Description</th>
                    <th colspan="2">Period</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.EntryNC != null && Model.EntryNC.ExpenseEntryNCDtls.Count > 0)
                {
                    @for (int i = 0; i < Model.EntryNC.ExpenseEntryNCDtls.Count; i++)
                    {
                        <tr id="item_@i">
                            <td class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                @if ((@Model.EntryNC.NC_Category_ID == 9) || (@Model.EntryNC.NC_Category_ID == 10) || (@Model.EntryNC.NC_Category_ID == 11))
                                {
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc)
                                }
                                else
                                {
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })
                                }
                            </td>
                            <td colspan="2"class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                <div class="dis-inline-block w-48 @SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                    @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Period_From, new { @type = "date", @class = "" })
                                </div>
                                <div class="dis-inline-block w-48 @SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                    @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpNCDtl_Remarks_Period_To, new { @type = "date", @class = "" })
                                </div>
                            </td>

                            @if (@Model.EntryNC.NC_Category_ID == 11)
                            {
                                <td colspan="3" class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name)" class="w-full input acc-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name)">
                                        @foreach (var groepModel in Model.accountList)
                                        {
                                            if (@groepModel.Value == @Model.accountList[0].Value)
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                </td>
                            }
                            else
                            {
                                <td colspan="3">
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })
                                </td>
                            }
                            <td class="@SetRateClass(@Model.EntryNC.NC_Category_ID, @i)">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, @getHtmlAttributes(@Model.EntryNC.NC_Category_ID, @i))</td>
                            @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                            {

                                <td>
                                    @if ((@Model.EntryNC.NC_Category_ID == 9 && ((i == 0) || (i == 1))) ||
                                   (@Model.EntryNC.NC_Category_ID == 10 && (i == 3)) || (@Model.EntryNC.NC_Category_ID == 11))
                                    {
                                        <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)">
                                            @foreach (var groepModel in Model.currList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                    }
                                </td>
                                <td class="@SetDebitClass(@Model.EntryNC.NC_Category_ID, @i)" id="deb_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, @getHtmlAttributesDebit(@Model.EntryNC.NC_Category_ID, @i, @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID, "db")))</td>
                                <td></td>
                                <td></td>
                            }
                            else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT)
                            {
                                <td></td>
                                <td></td>
                                <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                <td class="" id="cred_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar" + @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID, "cd") + "", @readonly = "true" })</td>
                            }
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                        </tr>

                        @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs.Count; j++)
                        {
                            <tr id="item_@i">
                                <td></td>
                                <td colspan="2"></td>
                                @if (@Model.EntryNC.NC_Category_ID == 11)
                                {
                                    <td colspan="3" class="@SetRemarksClass(@Model.EntryNC.NC_Category_ID)">
                                        <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name)" class="w-full input acc-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name)">
                                            @foreach (var groepModel in Model.accountList)
                                            {
                                                if (@groepModel.Value == @Model.accountList[0].Value)
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                }
                                else
                                {
                                    <td colspan="3">
                                        @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })
                                    </td>
                                }
                                <td></td>
                                @if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                                {

                                    <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })</td>
                                    <td class="voucher-input" id="deb_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar " + @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID, "db") + "" })</td>
                                    <td></td>
                                    <td></td>
                                }
                                else if (Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT)
                                {
                                    <td></td>
                                    <td></td>
                                    <td>
                                        @if ((@Model.EntryNC.NC_Category_ID == 9 && (i == 0)) || (@Model.EntryNC.NC_Category_ID == 10) || (@Model.EntryNC.NC_Category_ID == 11))
                                        {
                                            <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)">
                                                @foreach (var groepModel in Model.currList)
                                                {
                                                    if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID + "")
                                                    {
                                                        <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@groepModel.Value">@groepModel.Text</option>
                                                    }
                                                }
                                            </select>
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                        }
                                    </td>
                                    <td class="" id="cred_@i">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar " + @SetClassCompSusp(Model.EntryNC.NC_Category_ID, Model.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID, "cd") + "", @readonly = "true" })</td>
                                }
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                                @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls[i].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                            </tr>
                        }
                        <tr class="NC_spacing_row"><td colspan="11"></td></tr>
                    }
                }
                @Html.HiddenFor(x => x.EntryNC.NC_Category_ID)
                @Html.HiddenFor(x => x.category_of_entry)
                @Html.HiddenFor(x => x.expenseDate)

                <tr>
                    <td class="float-l">
                        <button id="add_new_nc_row" type="button" class="glyphicon glyphicon-plus"></button>
                        <select id="accOptions" style="display: none;">
                            @foreach (var opt in Model.accountList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                        <select id="currOptions" style="display: none;">
                            @foreach (var opt in Model.currList)
                            {
                                <option value="@opt.Value">@opt.Text</option>
                            }
                        </select>
                    </td>
                </tr>
            </tbody>
        </table>

        @if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_LS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class="hidden"})</td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
            </table>
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_JS_PAYROLL)
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total Php</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class="hidden"})</td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Computer Suspense</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CS_TotalAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="7"></td>
                    <td colspan="1">Debit</td>
                    <td colspan="1"></td>
                    <td colspan="1">Credit</td>
                </tr>
                <tr>
                    <td colspan="2">Balance Checker</td>
                    <td colspan="1"></td>
                    <td colspan="3">Inter-Entity Liability</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_CredAmt, new { @readonly = "true" })</td>
                </tr>
                <tr>
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="3" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_IE_TotalAmt, new { @readonly = "true" })</td>
                </tr>
            </table>
        }
        else if (Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_PETTY_CASH_REPLENISHMENT
            || Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_RETURN_OF_JS_PAYROLL
            || Model.EntryNC.NC_Category_ID == GlobalSystemValues.NC_FOREIGN_EXCHANGE_RECEIVING)
        {
                <table class="table table-bordered voucher-tbl" style="background-color: #fafafa; border: 2px solid #ccc !important; margin-bottom: 20px!important">
                    <tr style="border-bottom: 2px solid #ccc !important;">
                        <td colspan="2">Total</td>
                        <td colspan="6"></td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                        <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class = "hidden" })</td>
                        <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                    </tr>
                    <tr class="NC_spacing_row"><td colspan="11"></td></tr>
                    <tr>
                        <td colspan="11"><label class="float-l">CDD Instruction Sheet</label></td>
                    </tr>
                    <tr id="NC_PCR1">
                        <td>@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Desc, new { @readonly = "true" })</td>
                        <td colspan="2">
                            <div class="dis-inline-block w-48">
                                @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Period_From, new { @type = "date", @class = "hidden" })
                            </div>
                            <div class="dis-inline-block w-48">
                                @Html.EditorFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpNCDtl_Remarks_Period_To, new { @type = "date", @class = "hidden" })
                            </div>
                        </td>

                        <td colspan="3">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                        <td class="voucher-inter">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Inter_Rate, new { @class = "ncVar", @disabled = "disabled", @readonly = "true" })</td>
                        @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                        {

                            <td>
                                @if ((@Model.EntryNC.NC_Category_ID == 9) || (@Model.EntryNC.NC_Category_ID == 10))
                                {
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)">
                                        @foreach (var groepModel in Model.currList)
                                        {
                                            if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                }
                                else
                                {
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                }
                            </td>
                            <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                            <td></td>
                            <td></td>
                        }
                        else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.First().ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT)
                        {
                            <td></td>
                            <td></td>
                            <td>
                                @if ((@Model.EntryNC.NC_Category_ID == 9) || (@Model.EntryNC.NC_Category_ID == 10))
                                {
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)">
                                        @foreach (var groepModel in Model.currList)
                                        {
                                            if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID + "")
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                }
                                else
                                {
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                }
                            </td>
                            <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                        }
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Acc_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Curr_ID)
                        @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[0].ExpNCDtlAcc_Type_ID)
                    </tr>

                    @for (int j = 1; j < Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs.Count; j++)
                    {
                        <tr id="NC_PCR2">
                            <td></td>
                            <td colspan="2"></td>
                            <td colspan="3">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_Name, new { @readonly = "true", @class = "w-full" })</td>
                            <td></td>
                            @if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_DEBIT)
                            {
                            <td>
                                @if ((@Model.EntryNC.NC_Category_ID == 9) || (@Model.EntryNC.NC_Category_ID == 10))
                                {
                                    <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)">
                                        @foreach (var groepModel in Model.currList)
                                        {
                                            if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID + "")
                                            {
                                                <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                            }
                                            else
                                            {
                                                <option value="@groepModel.Value">@groepModel.Text</option>
                                            }
                                        }
                                    </select>
                                }
                                else
                                {
                                    @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                }
                            </td>
                                <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                                <td></td>
                                <td></td>
                            }
                            else if (Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID == GlobalSystemValues.NC_CREDIT)
                            {
                                <td></td>
                                <td></td>
                                <td>
                                    @if ((@Model.EntryNC.NC_Category_ID == 9) || (@Model.EntryNC.NC_Category_ID == 10))
                                    {
                                        <select id="@Html.IdFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name)" class="w-full input curr-sel" name="@Html.NameFor(x => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name)">
                                            @foreach (var groepModel in Model.currList)
                                            {
                                                if (@groepModel.Value == @Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID + "")
                                                {
                                                    <option value="@groepModel.Value" selected>@groepModel.Text</option>
                                                }
                                                else
                                                {
                                                    <option value="@groepModel.Value">@groepModel.Text</option>
                                                }
                                            }
                                        </select>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_Name, new { @readonly = "true" })
                                    }
                                </td>
                                <td class="" id="">@Html.TextBoxFor(modelItem => Model.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Amount, new { @class = "ncVar", @readonly = "true" })</td>
                            }
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Acc_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Curr_ID)
                            @Html.HiddenFor(x => x.EntryNC.ExpenseEntryNCDtls_CDD[0].ExpenseEntryNCDtlAccs[j].ExpNCDtlAcc_Type_ID)
                        </tr>
                    }
                    @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                    @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
                </table>
        }
        else
        {
            <table class="table table-bordered voucher-tbl m-t-20" style="background-color: #fafafa; border: 2px solid #ccc !important">
                <tr style="border-bottom: 2px solid #ccc !important;">
                    <td colspan="2">Total</td>
                    <td colspan="5"></td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_DebitAmt, new { @readonly = "true" })</td>
                    <td colspan="1" class="border-solid">@Html.TextBoxFor(x => x.EntryNC.NC_TotalAmt, new { @readonly = "true", @class = "hidden" })</td>
                    <td colspan="1" class="border-solid NC_readonly_row">@Html.TextBoxFor(x => x.EntryNC.NC_CredAmt, new { @readonly = "true" })</td>
                </tr>
                @Html.HiddenFor(x => x.EntryNC.NC_IE_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_IE_TotalAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_DebitAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_CredAmt)
                @Html.HiddenFor(x => x.EntryNC.NC_CS_TotalAmt)
            </table>
        }
    }
</div>
<script>
    $(document).ready(function () {
        var computeFunction = function (event) {
            if (event.target.classList.contains("ncVar")) {
                computeValsNC();
            }
        }
        document.addEventListener("change", computeFunction, false);
        computeValsNC();

        $('#NCPartialTbl').on('update', function () {
            computeValsNC();
        });

        function computeValsNC() {
            var totalDebit = 0;
            var totalCredit = 0;
            var totalCSDebit = 0;
            var totalCSCredit = 0;

            var subtotalPCRPettyDeb = 0;
            var subtotalPCRPettyCred = 0;
            var subtotalPCRCompDeb = 0;
            var subtotalPCRCompCred = 0;
            var subtotalIEDeb = 0;
            var subtotalIECred = 0;

            //TEMP
            var tax_Rate = 0.0178572065098185;

            var categoryID = $("select#categoryName option:selected").val();
            $("tr[id^='item_']").each(function (index, element) {
                var idNo = $(element).attr('id').substr(5);
                var rate = $(element).find("#ExpNCDtlAcc_Inter_Rate").val();

                var subtotalDeb = 0;
                var subtotalCred = 0;

                var subtotalCSDeb = 0;
                var subtotalCSCred = 0;

                //collecting values for Debit
                $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                    var debitVal = parseFloat($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").val());
                    if (categoryID == "8") {
                        if ((idNo != 2) && (idNo != 3)) {
                            subtotalDeb += debitVal;
                        }
                    } else if (categoryID == "11") {
                        var rateVal = parseFloat($("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate']").val());
                        if (rateVal != 0) {
                            debitVal *= rateVal;
                        }
                       subtotalDeb += debitVal;
                    } else {
                        subtotalDeb += debitVal;
                    }

                    //set values of Credit from Debit
                    var tempInd = parseInt(ind) + 1;
                    if ((categoryID == "4") || (categoryID == "5")) {
                        var taxAccVal = parseFloat(debitVal * tax_Rate);
                        var BkAccVal = debitVal - taxAccVal;
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(parseFloat(taxAccVal).toFixed(2));
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + (parseInt(tempInd) + 1) + "__ExpNCDtlAcc_Amount']").val(parseFloat(BkAccVal).toFixed(2));
                    } else if ((categoryID == "8") && (idNo == 2)) {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(debitVal);
                    } else if ((categoryID == "8") && (idNo == 3) || (categoryID == "9") && (idNo == 1)) {
                        //nothing will happen when passing the 4th row in Petty Cash Replenishment
                        //the value will only be inputted when rate and credit is not empty
                    } else if ((categoryID == "10") && (idNo == 1)) {
                        var rateVal = $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").val();
                        var debitVal = $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val();
                        if (((rateVal != "0") && ($.isNumeric(rateVal))) && ((debitVal != "0") && ($.isNumeric(debitVal)))) {
                            var creditVal = parseFloat(debitVal) / parseFloat(rateVal);
                            //set value to credit
                            $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(creditVal.toFixed(2));
                            $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").attr('value', creditVal.toFixed(2));
                            //set value to 3rd debit
                            $("#EntryNC_ExpenseEntryNCDtls_2__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(creditVal.toFixed(2));
                            $("#EntryNC_ExpenseEntryNCDtls_2__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', creditVal.toFixed(2));
                            //set value to 4th debit
                            $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(creditVal.toFixed(2));
                            $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', creditVal.toFixed(2));
                            //set value to cdd debit
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(creditVal.toFixed(2));
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', creditVal.toFixed(2));
                            //set value to cdd credit
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(creditVal.toFixed(2));
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").attr('value', creditVal.toFixed(2));
                        } else {
                            $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(0);
                            $("#EntryNC_ExpenseEntryNCDtls_2__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(0);
                            $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(0);
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(0);
                            $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(0);
                        }
                    } else if (((categoryID == "9") && (idNo == 0)) || ((categoryID == "10") && (idNo == 0))) {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(debitVal.toFixed(2));
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', debitVal.toFixed(2));
                    } else {
                        $(el).parent().siblings().find("td[id='cred_" + idNo + "']").find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").val(debitVal.toFixed(2));
                    }
                });
                //collect values for Credit
                $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                    subtotalCred += parseFloat($(el).find("[id$='__ExpNCDtlAcc_Amount']").val());
                });

                //In JSPAYROLL, set value to 4th Entry Debit
                if ((categoryID == "8") && (idNo == 3) && ($(element).find("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").length != 0)) {
                    var rateVal = $(element).find("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").val();
                    var credVal = $("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val();
                    if (((rateVal != "0") && ($.isNumeric(rateVal))) && ((credVal != "0") && ($.isNumeric(credVal)))) {
                        var debitVal = parseFloat(rateVal) * parseFloat(credVal);
                        $(element).find("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(debitVal.toFixed(2));
                        $(element).find("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").attr('value', debitVal.toFixed(2));
                    } else {
                        $(element).find("#EntryNC_ExpenseEntryNCDtls_3__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(0);
                    }
                }
                //In RETURN OF JSPAYROLL, set value to 2nd Entry Debit
                if ((categoryID == "9") && (idNo == 1) && ($(element).find("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").length != 0)) {
                    var rateVal = $(element).find("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Inter_Rate").val();
                    var debitVal = $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val();
                    if (((rateVal != "0") && ($.isNumeric(rateVal))) && ((debitVal != "0") && ($.isNumeric(debitVal)))) {
                        var credVal = parseFloat(rateVal) * parseFloat(debitVal);
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(credVal.toFixed(2));
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").attr('value', credVal.toFixed(2));
                    } else {
                        $("#EntryNC_ExpenseEntryNCDtls_1__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(0);
                    }
                }
                //In MISC ENTRIES, set value to 1st Entry ACC ID
                if (categoryID == "11") {
                    var accId1 = $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_Name option:selected").val();
                    if (accId1 != "0") {
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_ID").val(accId1);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Acc_ID").attr('value', accId1);
                    }
                    var accId2 = $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_Name option:selected").val();
                    if (accId2 != "0") {
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_ID").val(accId2);
                        $("#EntryNC_ExpenseEntryNCDtls_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Acc_ID").attr('value', accId2);
                    }
                }

                //For Computation of Computer Suspense Balance Checker in LSPAYROLL AND JSPAYROLL
                if ((categoryID == "1") || (categoryID == "8")) {
                    $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-comp-susp-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            if ((categoryID == "8") && ((idNo != 1) && (idNo != 3) && (idNo != 4) )) {
                                debitVal = 0;
                            }
                            subtotalCSDeb += debitVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-inter-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalIEDeb += debitVal;
                        }
                    });
                    $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                        var tempInd = parseInt(ind) + 1;
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-comp-susp-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalCSCred += creditVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-inter-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalIECred += creditVal;
                        }
                    });
                }
                
                
                totalDebit += parseFloat(subtotalDeb);
                totalCredit += parseFloat(subtotalCred);

                totalCSDebit += parseFloat(subtotalCSDeb);
                totalCSCredit += parseFloat(subtotalCSCred);
            });
            $("#EntryNC_NC_DebitAmt").val(parseFloat(totalDebit).toFixed(2));
            $("#EntryNC_NC_CredAmt").val(parseFloat(totalCredit).toFixed(2));
            $("#EntryNC_NC_TotalAmt").val(parseFloat(totalDebit).toFixed(2));


            $("#EntryNC_NC_IE_DebitAmt").val(parseFloat(subtotalIEDeb).toFixed(2));
            $("#EntryNC_NC_IE_CredAmt").val(parseFloat(subtotalIECred).toFixed(2));

            $("#EntryNC_NC_CS_DebitAmt").val(parseFloat(totalCSDebit).toFixed(2));
            $("#EntryNC_NC_CS_CredAmt").val(parseFloat(totalCSCredit).toFixed(2));
            $("#EntryNC_NC_CS_TotalAmt").val((parseFloat(totalCSDebit) + parseFloat(totalCSCredit)).toFixed(2));


            //For Computation of Computer Suspense Balance Checker in Petty Cash Replenishment
            $("tr[id^='item_']").each(function (index, element) {
                if (categoryID == "7") {
                    var idNo = $(element).attr('id').substr(5);
                    $(element).find("td[id='deb_" + idNo + "']").each(function (ind, el) {
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-petty-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRPettyDeb += debitVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-comp-db")) {
                            var debitVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + ind + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRCompDeb += debitVal;
                        }
                    });
                    $(element).find("td[id='cred_" + idNo + "']").each(function (ind, el) {
                        var tempInd = parseInt(ind) + 1;
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-petty-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRPettyCred += creditVal;
                        }
                        if ($(el).find("[id='EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount']").hasClass("nc-cdd-comp-cd")) {
                            var creditVal = parseFloat($(el).find("#EntryNC_ExpenseEntryNCDtls_" + idNo + "__ExpenseEntryNCDtlAccs_" + tempInd + "__ExpNCDtlAcc_Amount").val());
                            subtotalPCRCompCred += creditVal;
                        }
                    });
                }

            });
            if (categoryID == "7") {
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").val(parseFloat(subtotalPCRPettyDeb).toFixed(2))
                //$("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_0__ExpNCDtlAcc_Amount").parent().siblings("td:eq(6)").text(parseFloat(subtotalPCRPettyCred).toFixed(2))
                $("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").val(parseFloat(subtotalPCRCompCred).toFixed(2))
                //$("#EntryNC_ExpenseEntryNCDtls_CDD_0__ExpenseEntryNCDtlAccs_1__ExpNCDtlAcc_Amount").parent().siblings("td:eq(5)").text(parseFloat(subtotalPCRCompDeb).toFixed(2))
            }
        }
    });
</script>